{"version":3,"file":"821.main.mjs","mappings":"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","sources":["webpack://digitaljs/webpack/runtime/chunk loaded","webpack://digitaljs/webpack/runtime/import chunk loading","webpack://digitaljs/./src/tools.mjs","webpack://digitaljs/./src/cells/base.mjs","webpack://digitaljs/./src/cells/io.mjs","webpack://digitaljs/./src/help.mjs","webpack://digitaljs/./src/cells/gates.mjs","webpack://digitaljs/./src/cells/arith.mjs","webpack://digitaljs/./src/cells/bus.mjs","webpack://digitaljs/./src/cells/subcircuit.mjs","webpack://digitaljs/./src/cells/mux.mjs","webpack://digitaljs/./src/cells/dff.mjs","webpack://digitaljs/./src/cells/memory.mjs","webpack://digitaljs/./src/cells/fsm.mjs","webpack://digitaljs/./src/cells/display7.mjs","webpack://digitaljs/./src/engines/worker-worker.mjs","webpack://digitaljs/webpack/bootstrap","webpack://digitaljs/webpack/runtime/define property getters","webpack://digitaljs/webpack/runtime/global","webpack://digitaljs/webpack/runtime/hasOwnProperty shorthand","webpack://digitaljs/webpack/runtime/make namespace object","webpack://digitaljs/webpack/runtime/node module decorator","webpack://digitaljs/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t821: 0\n};\n\n// no install chunk\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no external install chunk\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\n\nconst circleArrowhead = {\n    tagName: 'circle',\n    attributes: {\n        'r': 7,\n        'fill': 'black',\n        'fill-opacity': 0.3,\n        'stroke': 'black',\n        'stroke-width': 2,\n        'cursor': 'move'\n    }\n};\nexport const CircleSourceArrowhead = joint.linkTools.SourceArrowhead.extend(_.merge({}, circleArrowhead));\nexport const CircleTargetArrowhead = joint.linkTools.TargetArrowhead.extend(_.merge({}, circleArrowhead));\n\nexport const DoublyButton = joint.linkTools.Button.extend({\n    update() {\n        if (this.relatedView.isShortWire()) {\n            this.options.distance = this.options.distanceShort || this.options.distance;\n            if (this.options.secondary) this.hide();\n        } else {\n            this.options.distance = this.options.distanceLong || this.options.distance;\n        }\n        return joint.linkTools.Button.prototype.update.apply(this, arguments);\n    }\n});\nexport const RemoveButton = DoublyButton.extend({\n    name: 'remove',\n    children: joint.linkTools.Remove.prototype.children,\n    options: joint.linkTools.Remove.prototype.options\n});\nexport const MonitorButton = DoublyButton.extend({\n    name: 'monitor',\n    children: [{\n        tagName: 'circle',\n        selector: 'button',\n        attributes: {\n            'r': 7,\n            'fill': '#001DFF',\n            'cursor': 'pointer'\n        }\n    }, {\n        tagName: 'path',\n        selector: 'icon',\n        attributes: {\n            'd': 'm -2.5,-0.5 a 2,2 0 1 0 4,0 2,2 0 1 0 -4,0 M 1,1 3,3',\n            'fill': 'none',\n            'stroke': '#FFFFFF',\n            'stroke-width': 2,\n            'pointer-events': 'none'\n        }\n    }],\n    options: {\n        action(evt) {\n            this.notify('link:monitor');\n        }\n    }\n});\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\nimport { Vector3vl } from '3vl';\nimport * as tools from '../tools.mjs';\nimport $ from 'jquery';\n\nexport const portGroupAttrs = {\n    wire: {\n        stroke: '#4B4F6A',\n        x1: 0, y1: 0,\n        x2: undefined, y2: 0\n    },\n    port: {\n        magnet: undefined,\n        r: 7,\n        stroke: 'black',\n        fill: 'white',\n        strokeWidth: 2,\n        strokeOpacity: 0.5\n    },\n    bits: {\n        ref: 'port',\n        fill: 'black',\n        fontSize: '7pt'\n    },\n    iolabel: {\n        textVerticalAnchor: 'middle',\n        fill: 'black',\n        fontSize: '8pt'\n    },\n    decor: {\n        stroke: 'black',\n        fill: 'transparent'\n    }\n};\n\n// Common base class for gate models\nexport const Gate = joint.shapes.basic.Generic.define('Gate', {\n    /* default properties */\n    propagation: 1,\n    label: '',\n    \n    size: { width: 80, height: 30 },\n    inputSignals: {},\n    outputSignals: {},\n    attrs: {\n        '.': { magnet: false },\n        body: { stroke: 'black', strokeWidth: 2 },\n        'text': {\n            fontSize: '8pt',\n            fill: 'black'\n        },\n        label: {\n            refX: .5, refDy: 3,\n            textAnchor: 'middle'\n        }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: 'left',\n                attrs: _.merge({}, portGroupAttrs, {\n                    wire: { x2: -25 },\n                    port: { magnet: 'passive', refX: -25 },\n                    bits: { refDx: 1, refY: -3, textAnchor: 'start' },\n                    iolabel: { refX: 5, textAnchor: 'start' }\n                })\n            },\n            'out': {\n                position: 'right',\n                attrs: _.merge({}, portGroupAttrs, {\n                    wire: { x2: 25 },\n                    port: { magnet: true, refX: 25 },\n                    bits: { refX: -1, refY: -3, textAnchor: 'end' },\n                    iolabel: { refX: -5, textAnchor: 'end' }\n                })\n            }\n        }\n    },\n\n    z: 1\n}, {\n    operation() {\n        return {};\n    },\n    initialize() {\n        // pre-process ports\n        const ports = this.get('ports');\n        if (ports.items) {\n            this._preprocessPorts(ports.items);\n        }\n        \n        joint.shapes.basic.Generic.prototype.initialize.apply(this, arguments);\n        this.prepare();\n        \n        this.bindAttrToProp('label/text', 'label');\n        if (this._unsupportedPropChanges.length > 0) {\n            this.on(this._unsupportedPropChanges.map(prop => 'change:'+prop).join(' '), (__, ___, opt) => {\n                if (opt.init) return;\n                \n                const changed = _.intersection(Object.keys(this.changed), this._unsupportedPropChanges);\n                changed.forEach(attr => {\n                    this.set(attr, this.previous(attr), {init: true});\n                });\n                console.warn('Beta property change support: \"' + changed + '\" changes on ' + this.get('type') + ' are (currently) not supported.');\n            });\n        }\n    },\n    prepare() {\n    },\n    bindAttrToProp(attr, prop) {\n        this.attr(attr, this.get(prop));\n        this.on('change:' + prop, (_, val) => this.attr(attr, val));\n    },\n  \n    /*\n     * Private methods.\n     */\n    _changeOutputSignals(sigs) {\n        _.chain(this.graph.getConnectedLinks(this, {outbound: true}))\n            .groupBy((wire) => wire.get('source').port)\n            .forEach((wires, port) => \n                wires.forEach((wire) => wire.set('signal', sigs[port])))\n            .value();\n    },\n    _setInput(sig, port) {\n        const signals = _.clone(this.get('inputSignals'));\n        signals[port] = sig;\n        this.set('inputSignals', signals);\n    },\n    _clearInput(port) {\n        const bits = this.getPort(port).bits;\n        this._setInput(Vector3vl.xes(bits), port);\n    },\n    _preprocessPorts(ports) {\n        this._resetPortsSignals(ports);\n        for (const port of ports) {\n            port.attrs = {};\n            port.attrs['bits'] = { text: this._getBitsText(port.bits) }\n            if (port.labelled) {\n                const iolabel = { text: 'portlabel' in port ? port.portlabel : port.id };\n                if (port.polarity === false)\n                    iolabel['text-decoration'] = 'overline';\n                if (port.decor) {\n                    console.assert(port.group == 'in');\n                    iolabel['refX'] = 10;\n                }\n                port.attrs['iolabel'] = iolabel;\n            }\n            if (port.decor) {\n                port.attrs['decor'] = { d: port.decor };\n            }\n        }\n    },\n    _setPortsBits(portsBits) {\n        const ports = _.cloneDeep(this.get('ports'));\n        const portsReset = [];\n        for (const portid in portsBits) {\n            const bits = portsBits[portid];\n            const port = ports.items.find(function(port) {\n                return port.id && port.id === portid;\n            });\n            port.bits = bits;\n            port.attrs['bits'].text = this._getBitsText(bits);\n            portsReset.push(port);\n        }\n        this._resetPortsSignals(portsReset);\n        //trigger port changes on model and view\n        this.set('ports', ports);\n        this.graph.getConnectedLinks(this, { outbound: true })\n            .filter((wire) => wire.get('source').port in portsBits)\n            .forEach((wire) => wire._changeSource(wire.get('source')));\n        this.graph.getConnectedLinks(this, { inbound: true })\n            .filter((wire) => wire.get('target').port in portsBits)\n            .forEach((wire) => wire._changeTarget(wire.get('target')));\n    },\n    _getBitsText(bits) {\n        return bits > 1 ? bits : '';\n    },\n    _resetPortValue(port) {\n        return Vector3vl.xes(port.bits);\n    },\n    _resetPortsSignals(ports) {\n        const signals = {\n            in: this.get('inputSignals'),\n            out: this.get('outputSignals')\n        }\n        \n        for (const port of ports) {\n            console.assert(port.bits >= 0);\n            signals[port.dir][port.id] = this._resetPortValue(port);\n        }\n        \n        this.set('inputSignals', signals.in);\n        this.set('outputSignals', signals.out);\n    },\n    _removePortsSignals(ports) {\n        const signals = {\n            in: this.get('inputSignals'),\n            out: this.get('outputSignals')\n        }\n        \n        for (const port of ports) {\n            delete signals[port.dir][port.id];\n        }\n        \n        this.set('inputSignals', signals.in);\n        this.set('outputSignals', signals.out);\n    },\n\n    /*\n     * JointJS port interface with custom hooks to adapt signals.\n     */\n    addPort(port) {\n        this.addPorts([port]);\n    },\n    addPorts(ports) {\n        this._preprocessPorts(ports);\n        joint.shapes.basic.Generic.prototype.addPorts.apply(this, arguments);\n    },\n    removePort(port, opt) {\n        this.removePorts([port]);\n    },\n    removePorts(ports, opt) {\n        this._removePortsSignals(ports);\n        joint.shapes.basic.Generic.prototype.removePorts.apply(this, arguments);\n    },\n\n    /*\n     * Layout methods.\n     */\n    _getStackedPosition(opt) {\n        return function(portsArgs, elBBox) {\n            // ports stacked from top to bottom or left to right\n            const side = opt.side || 'left';\n            const step = opt.step || 16;\n            const offset = opt.offset || 12;\n            const x = side == 'left' ? elBBox.topLeft().x : side == 'right' ? elBBox.topRight().x : undefined;\n            const y = side == 'top' ? elBBox.topLeft().y : side == 'bottom' ? elBBox.bottomRight().y : undefined;\n            if (x !== undefined) {\n                return _.map(portsArgs, function(portArgs, index) {\n                    index += portArgs.idxOffset || 0;\n                    return joint.g.Point({ x: x, y: index*step + offset });\n                });\n            } else {\n                return _.map(portsArgs, function(portArgs, index) {\n                    index += portArgs.idxOffset || 0;\n                    return joint.g.Point({ x: index*step + offset, y: y });\n                });\n            }\n        }\n    },\n    getLayoutSize() {\n        return this.size();\n    },\n    setLayoutPosition(position) {\n        this.set('position', {\n            x: position.x,\n            y: position.y\n        });\n    },\n\n    /*\n     * View Markup.\n     */\n    portMarkup: [{\n        tagName: 'line',\n        className: 'wire',\n        selector: 'wire'\n    }, {\n        tagName: 'circle',\n        className: 'port',\n        selector: 'port'\n    }, {\n        tagName: 'text',\n        className: 'bits',\n        selector: 'bits'\n    }, {\n        tagName: 'text',\n        className: 'iolabel',\n        selector: 'iolabel'\n    }, {\n        tagName: 'path',\n        className: 'decor',\n        selector: 'decor'\n    }],\n    //portLabelMarkup: null, //todo: see https://github.com/clientIO/joint/issues/1278\n    markup: [{\n        tagName: 'text',\n        className: 'label',\n        selector: 'label'\n    }],\n\n    /*\n     * Gate parameters for serialization.\n     */\n    getGateParams(layout) {\n        return _.cloneDeep(_.pick(this.attributes, this._gateParams.concat(layout ? this._gateLayoutParams : [])));\n    },\n    _gateParams: ['label', 'type', 'propagation', 'source_positions'],\n    _gateLayoutParams: ['position'],\n    _unsupportedPropChanges: [],\n    _operationHelpers: [],\n    _presentationParams: []\n});\n\nexport const GateView = joint.dia.ElementView.extend({\n    attrs: {\n        signal: {\n            high: { port: { 'stroke': '#03c03c' } },\n            low: { port: { 'stroke': '#fc7c68' } },\n            def: { port: { 'stroke': '#779ecb' } },\n            undef: { port: { 'stroke': '#999' } }\n        }\n    },\n    presentationAttributes: joint.dia.ElementView.addPresentationAttributes({\n        inputSignals: 'SIGNAL',\n        outputSignals: 'SIGNAL2'\n    }),\n    stopprop(evt) {\n        evt.stopPropagation();\n    },\n    confirmUpdate(flags) {\n        if (this.hasFlag(flags, 'SIGNAL')) {\n            this._updatePortSignals('in');\n        }\n        if (this.hasFlag(flags, 'SIGNAL2')) {\n            this._updatePortSignals('out');\n        }\n        joint.dia.ElementView.prototype.confirmUpdate.apply(this, arguments);\n    },\n    _updatePortSignals(dir) {\n        const signals =\n            dir === 'in' ? this.model.get('inputSignals') :\n            dir === 'out' ? this.model.get('outputSignals') :\n            _.merge({}, this.model.get('inputSignals'), this.model.get('outputSignals'));\n        for (const port in signals) {\n            const signal = signals[port];\n            const attrs = this.attrs.signal[\n                !signal.isDefined ? 'undef' :\n                signal.isHigh ? 'high' :\n                signal.isLow ? 'low' : 'def'\n            ];\n            this._applyPortAttrs(port, attrs);\n        }\n    },\n    _applyAttrs(attrs) {\n        for (const selector in attrs) {\n            const node = this.selectors[selector];\n            this.setNodeAttributes(node, attrs[selector]);\n        }\n    },\n    _applyPortAttrs(port, attrs) {\n        if (port in this._portElementsCache) {\n            for (const selector in attrs) {\n                const node = this._portElementsCache[port].portSelectors[selector];\n                this.setNodeAttributes(node, attrs[selector]);\n            }\n        }\n    },\n    // overrides joint.dia.ElementView.prototype._updatePorts to reflect port signals\n    _updatePorts() {\n        joint.dia.ElementView.prototype._updatePorts.apply(this, arguments);\n        this._updatePortSignals();\n    }\n});\n\n// Connecting wire model\nexport const Wire = joint.shapes.standard.Link.define('Wire', {\n    attrs: {\n        line: {\n            class: 'connection',\n            targetMarker: null\n        },\n        wrapper: {\n            stroke: 'red'\n        }\n    },\n\n    signal: Vector3vl.xes(1),\n    bits: 1,\n    warning: false,\n\n    // show behind gates\n    z: 0\n}, {\n    initialize() {\n        joint.shapes.standard.Link.prototype.initialize.apply(this, arguments);\n        if (this.has('netname')) {\n            this.label(0, {\n                markup: [\n                    {\n                        tagName: 'text',\n                        selector: 'label'\n                    }\n                ],\n                attrs: {\n                    label: {\n                        text: this.get('netname'),\n                        fill: 'black',\n                        fontSize: '8pt'\n                    }\n                },\n                position: {\n                    distance: 0.5\n                }\n            });\n        }\n    },\n    onAdd() {\n        this._changeSource(this.get('source'));\n        this._was_added = true; // hacky fix for warnings calculation\n    },\n    remove() {\n        const tar = this.get('target');\n        const target = this.graph.getCell(tar.id);\n        if (target && 'port' in tar) {\n            target._clearInput(tar.port);\n        }\n        joint.shapes.standard.Link.prototype.remove.apply(this, arguments);\n    },\n\n    /*\n     * Private methods.\n     */\n    _propagateSignal(tar, sig) {\n        const target = this.getTargetElement();\n        if (target) {\n            if (this.get('warning'))\n                target._clearInput(tar.port);\n            else\n                target._setInput(sig, tar.port);\n        }\n    },\n    _changeSignal(sig) {\n        this._propagateSignal(this.get('target'), sig);\n    },\n    _changeSource(src) {\n        const source = this.getSourceElement();\n        if (source && 'port' in src) {\n            this.set('bits', source.getPort(src.port).bits);\n            this._checkConnection();\n            //set signal after checking connection to avoid false signal propagation\n            this.set('signal', source.get('outputSignals')[src.port]);\n        } else {\n            this.set('signal', Vector3vl.xes(this.get('bits')));\n        }\n    },\n    _changeTarget(tar) {\n        this._checkConnection();\n        if ('port' in tar) {\n            this._propagateSignal(tar, this.get('signal'));\n        }\n        if (!this.hasChanged('target')) return;\n        const preTar = this.previous('target');\n        const preTarget = this.graph.getCell(preTar.id);\n        if (preTarget && 'port' in preTar) {\n            preTarget._clearInput(preTar.port);\n        }\n    },\n    _checkConnection() {\n        const tar = this.get('target');\n        const target = this.graph.getCell(tar.id);\n        this.set('warning', (target && target.getPort(tar.port).bits !== this.get('bits')) || false, {silent: !this._was_added});\n    },\n\n    /*\n     * Wire parameters for serialization.\n     */\n    getWireParams(layout) {\n        const connector = {\n            from: {\n                id: this.get('source').id,\n                port: this.get('source').port\n            },\n            to: {\n                id: this.get('target').id,\n                port: this.get('target').port\n            }\n        };\n        if (this.has('netname'))\n            connector.name = this.get('netname');\n        if (layout && this.has('vertices') && this.get('vertices').length > 0)\n            connector.vertices = _.cloneDeep(this.get('vertices'));\n        return connector;\n    },\n    getWirePath() {\n        const hier = [];\n        for (let sc = this.graph.get('subcircuit'); sc != null; sc = sc.graph.get('subcircuit')) {\n            if (!sc.has('label')) return null;\n            hier.push(sc.get('label'));\n        }\n        return hier.reverse();\n    }\n});\n\nexport const WireView = joint.dia.LinkView.extend({\n    initFlag: joint.dia.LinkView.prototype.initFlag.concat(['INIT']),\n    longWireLength: 400,\n    attrs: {\n        signal: {\n            high: { line: { 'stroke': '#03c03c' } },\n            low: { line: { 'stroke': '#fc7c68' } },\n            def: { line: { 'stroke': '#779ecb' } },\n            undef: { line: { 'stroke': '#999' } }\n        },\n        bits: {\n            bus: { line: { 'stroke-width': '4px' } },\n            single: { line: { 'stroke-width': '2px' } }\n        },\n        warning: {\n            warn: { wrapper: { 'stroke-opacity': '0.5' } },\n            none: { wrapper: { 'stroke-opacity': '0' } }\n        }\n    },\n    // only instantiate toolsView in browser-environment\n    _wireToolsView: (typeof window !== 'undefined') ? new joint.dia.ToolsView({\n        tools: [\n            new joint.linkTools.Vertices({ focusOpacity: 0.5 }),\n            //new joint.linkTools.Segments({ focusOpacity: 0.5 }), //todo: problem with signal reset ??,\n            new tools.CircleSourceArrowhead(),\n            new tools.CircleTargetArrowhead(),\n            new tools.RemoveButton({ distanceShort: '75%', distanceLong: '50' }),\n            new tools.RemoveButton({ distance: '-50', secondary: true }),\n            new tools.MonitorButton({ distanceShort: '25%', distanceLong: '30' }),\n            new tools.MonitorButton({ distance: '-30', secondary: true })\n        ]\n    }) : null,\n    presentationAttributes: joint.dia.LinkView.addPresentationAttributes({\n        signal: 'SIGNAL',\n        bits: 'BITS',\n        warning: 'WARNING'\n    }),\n    initialize() {\n        joint.dia.LinkView.prototype.initialize.apply(this, arguments);\n        this.prevModels = { source: null, target: null };\n    },\n    confirmUpdate(flags) {\n        joint.dia.LinkView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL')) {\n            this._updateSignal();\n        }\n        if (this.hasFlag(flags, 'BITS')) {\n            this._updateBits();\n        }\n        if (this.hasFlag(flags, 'WARNING')) {\n            this._updateWarning();\n        }\n    },\n\n    isShortWire() {\n        return this.getConnectionLength() < this.longWireLength;\n    },\n    _updateSignal() {\n        const signal = this.model.get('signal');\n        const attrs = this.attrs.signal[\n            !signal.isDefined ? 'undef' :\n            signal.isHigh ? 'high' :\n            signal.isLow ? 'low' : 'def'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateBits() {\n        const bits = this.model.get('bits');\n        const attrs = this.attrs.bits[\n            bits > 1 ? 'bus' : 'single'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateWarning() {\n        const warning = this.model.get('warning');\n        const attrs = this.attrs.warning[\n            warning ? 'warn' : 'none'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _applyAttrs(attrs) {\n        for (const selector in attrs) {\n            const node = this.selectors[selector];\n            this.setNodeAttributes(node, attrs[selector]);\n        }\n    },\n\n    update() {\n        joint.dia.LinkView.prototype.update.apply(this, arguments);\n        this._updateSignal();\n        this._updateBits();\n        this._updateWarning();\n    },\n    onRemove() {\n        joint.dia.LinkView.prototype.onRemove.apply(this, arguments);\n        this._removeTooltip();\n    },\n\n    mouseenter(evt) {\n        joint.dia.LinkView.prototype.mouseenter.apply(this, arguments);\n        this.addTools(this._wireToolsView);\n        this._addTooltip({x: evt.clientX + 5, y: evt.clientY + 5 });\n    },\n    mouseleave(evt) {\n        joint.dia.LinkView.prototype.mouseleave.apply(this, arguments);\n        this.removeTools();\n        this._removeTooltip();\n    },\n\n    /*\n     * Display current value on wire in tooltip.\n     */\n    _addTooltip(pos) {\n        if (this.model.get('bits') == 1) return;\n        if (this.wire_hover) return;\n        this.wire_hover = $('<div class=\"wire_hover\">')\n            .css('left', pos.x)\n            .css('top', pos.y)\n            .appendTo($(document.body));\n        this._generateTextForTooltip();\n        this.listenTo(this.model, 'change:signal', this._generateTextForTooltip);\n    },\n    _removeTooltip() {\n        if (this.wire_hover) {\n            this.wire_hover.remove();\n            this.wire_hover = null;\n            this.stopListening(this.model, 'change:signal', this._generateTextForTooltip);\n        }\n    },\n    _generateTextForTooltip() {\n        if (!this.wire_hover) return;\n        const sig = this.model.get('signal');\n        const display3vl = this.model.graph._display3vl;\n        const hovertext = [\n            'Hex: ' + display3vl.show('hex', sig) + '<br>',\n            'Dec: ' + display3vl.show('dec', sig) + '<br>',\n            'Oct: ' + display3vl.show('oct', sig) + '<br>',\n            'Bin: ' + display3vl.show('bin', sig)\n        ].join('');\n        this.wire_hover.html(hovertext);\n    },\n\n    // Quick-and-dirty performance fix\n    onEndModelChange(endType, endModel, opt) {\n        if (typeof endModel == 'object' && endModel != null &&\n            endModel == this.prevModels[endType] &&\n            Object.keys(endModel.changed).length > 0 &&\n            !('position' in endModel.changed)) return;\n        joint.dia.LinkView.prototype.onEndModelChange.apply(this, arguments);\n        this.prevModels[endType] = endModel;\n    }\n});\n\n// base class for gates displayed as a box\nexport const Box = Gate.define('Box', {\n    attrs: {\n        body: { refWidth: 1, refHeight: 1 },\n        tooltip: { refX: 0, refY: -30, height: 30 }\n    }\n}, {\n    initialize() {\n        Gate.prototype.initialize.apply(this, arguments);\n        this.on('change:size', (_, size) => {\n            if (size.width > this.tooltipMinWidth) {\n                this.attr('tooltip', { refWidth: 1, width: null });\n            } else {\n                this.attr('tooltip', { refWidth: null, width: this.tooltipMinWidth });\n            }\n        });\n        this.trigger('change:size', this, this.prop('size'));\n    },\n    markup: Gate.prototype.markup.concat([{\n            tagName: 'rect',\n            className: 'body',\n            selector: 'body'\n        }\n    ]),\n    markupZoom: [{\n        tagName: 'foreignObject',\n        className: 'tooltip',\n        selector: 'tooltip',\n        children: [{\n            tagName: 'body',\n            namespaceURI: 'http://www.w3.org/1999/xhtml',\n            children: [{\n                tagName: 'a',\n                className: 'zoom',\n                textContent: '🔍',\n                style: { cursor: 'pointer' }\n            }]\n        }]\n    }],\n    tooltipMinWidth: 20,\n    decorClock: 'M' + [\n                    [0, -6],\n                    [6, 0],\n                    [0, 6]\n                ].map(l => l.join(' ')).join(' L')\n});\n\nexport const BoxView = GateView.extend({\n    _autoResizeBox: false,\n    render() {\n        //todo: resize Box after port label / IO name / mode / bit size change\n        GateView.prototype.render.apply(this, arguments);\n        if (this._autoResizeBox && !this.model.get('box_resized')) {\n            this.model.set('box_resized', true);\n            this.model.prop('size/width', this._calculateBoxWidth());\n        }\n    },\n    _calculateBoxWidth() {\n        const leftlabels = Array.from(this.el.querySelectorAll('[port-group=in] > text.iolabel'));\n        const rightlabels = Array.from(this.el.querySelectorAll('[port-group=out] > text.iolabel'));\n        const leftwidth = Math.max(...leftlabels.map(x => x.getBBox().width));\n        const rightwidth = Math.max(...rightlabels.map(x => x.getBBox().width));\n        const fixup = x => x == -Infinity ? -5 : x;\n        const width = fixup(leftwidth) + fixup(rightwidth) + 25;\n        return width;\n    }\n});\n\n","\"use strict\";\n\nimport { Box, BoxView } from './base.mjs';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { Vector3vl } from '3vl';\n\n// Things with numbers\nexport const NumBase = Box.define('NumBase', {\n    /* default properties */\n    numbase: 'hex',\n    bits: 1\n}, {\n    initialize() {\n        Box.prototype.initialize.apply(this, arguments);\n\n        this.on('change:bits', (_, bits) => {\n            const display3vl = this.graph._display3vl;\n            const displays = display3vl.usableDisplays(this.numbaseType, this.get('bits'));\n            if (!displays.includes(this.get('numbase')))\n                this.set('numbase', 'hex');\n        });\n    },\n    tooltipMinWidth: 70,\n    markupTooltip: [{\n        tagName: 'foreignObject',\n        className: 'tooltip',\n        selector: 'tooltip',\n        children: [{\n            tagName: 'body',\n            namespaceURI: 'http://www.w3.org/1999/xhtml',\n            children: [{\n                tagName: 'select',\n                className: 'numbase'\n            }]\n        }]\n    }],\n    _gateParams: Box.prototype._gateParams.concat(['numbase'])\n});\nexport const NumBaseView = BoxView.extend({\n    presentationAttributes: BoxView.addPresentationAttributes({\n        bits: 'BITS',\n        numbase: 'NUMBASE'\n    }),\n    _autoResizeBox: true,\n    events: {\n        \"click select.numbase\": \"stopprop\",\n        \"mousedown select.numbase\": \"stopprop\", // Prevent drag\n        \"touchstart select.numbase\": \"stopprop\", // Prevent drag & make sure select works\n        \"change select.numbase\": \"_changeNumbase\"\n    },\n    _changeNumbase(evt) {\n        this.model.set('numbase', evt.target.value || 'bin');\n    },\n    _calculateBoxWidth() {\n        const testtext = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        $(testtext).text(Array(this.model.get('bits')).fill('0').join(''))\n            .attr('class', 'numvalue')\n            .appendTo(this.$el);\n        const width = testtext.getBBox().width + 20;\n        testtext.remove();\n        return width;\n    },\n    confirmUpdate(flags) {\n        BoxView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'BITS') || this.hasFlag(flags, 'RENDER'))\n            this._makeNumBaseSelector();\n        if (this.hasFlag(flags, 'NUMBASE'))\n            this._updateNumBaseSelector();\n    },\n    _makeNumBaseSelector() {\n        this.$('select.numbase').empty();\n        const numbase = this.model.get('numbase');\n        const display3vl = this.model.graph._display3vl;\n        for (const base of display3vl.usableDisplays(this.model.numbaseType, this.model.get('bits'))) {\n            const opt = $('<option>')\n                .attr('value', base)\n                .prop('selected', base == numbase)\n                .text(base)\n                .appendTo(this.$('select.numbase'));\n        }\n    },\n    _updateNumBaseSelector() {\n        this.$('select.numbase').val(this.model.get('numbase'));\n    }\n});\n\n// Input/output model\nexport const IO = NumBase.define('IO', {\n    /* default properties */\n    bits: 1,\n    net: '',\n    //as I/O has no delay, this is even not taken into account at all\n    propagation: 0,\n    /* 0 - within subcircuit, 1 - single-line, 2 - bus-line */\n    mode: -1,\n\n    attrs: {\n        ioname: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle',\n            fontWeight: 'bold',\n            fontSize: '10pt'\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: this._portDirection, group: this._portDirection, dir: this._portDirection, bits: bits }\n        ];\n\n        NumBase.prototype.initialize.apply(this, arguments);\n\n        this.on('change:bits', (_, bits) => {\n            const b = {};\n            b[this._portDirection] = bits;\n            this._setPortsBits(b);\n            if (this.get('mode') != 0) this._checkMode();\n        });\n        this.bindAttrToProp('text.ioname/text', 'net');\n    },\n    onAdd() {\n        this._checkMode();\n    },\n    _checkMode() {\n        // assumes graph to have subcircuit property before adding elements\n        const withinSubcircuit = this.graph && this.graph.has('subcircuit');\n        const bits = this.get('bits');\n        const mode = withinSubcircuit ? 0 : bits == 1 ? 1 : 2;\n\n        this.set('mode', mode);\n        this.set('box_resized', false);\n        this.set('markup', mode == 0 ? this.markupInSubcircuit :\n            mode == 1 ? this.markupSingle : this.markupBus\n        );\n        return mode;\n    },\n    _setPortsBits(portsBits) {\n        NumBase.prototype._setPortsBits.apply(this, arguments);\n\n        if (this.get('mode') != 0) return; // not inside a subcircuit\n        const subcir = this.graph.get('subcircuit');\n        console.assert(subcir != null);\n        const portsBitsSubcir = {};\n        portsBitsSubcir[this.get('net')] = portsBits[this._portDirection];\n        subcir._setPortsBits(portsBitsSubcir);\n    },\n    markupSingle: NumBase.prototype.markup,\n    markupBus: NumBase.prototype.markup.concat(NumBase.prototype.markupTooltip),\n    markupInSubcircuit: NumBase.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'ioname',\n            selector: 'ioname'\n        }\n    ]),\n    _gateParams: NumBase.prototype._gateParams.concat(['bits','net','order'])\n});\nexport const IOView = NumBaseView.extend({\n    _calculateBoxWidth() {\n        switch (this.model.get('mode')) {\n            case 0:\n                // resize based on io name\n                const text = this.selectors['ioname'];\n                if (text.getAttribute('display') !== 'none') return text.getBBox().width + 10;\n                return 20;\n            case 1:\n                // resize to width = 30 (assumes height == 30 too)\n                return 30;\n            case 2:\n                // resize based on binary string\n                return NumBaseView.prototype._calculateBoxWidth.call(this);\n        }\n    }\n});\n\n// Input model\nexport const Input = IO.define('Input', {\n    attrs: {\n        btnface: {\n            stroke: 'black', strokeWidth: 2,\n            refX: .2, refY: .2,\n            refHeight: .6, refWidth: .6,\n            cursor: 'pointer'\n        },\n        'foreignObject.valinput': {\n            refX: .5, refY: .5,\n            refWidth: -10, refHeight: -10,\n            xAlignment: 'middle', yAlignment: 'middle',\n        }\n    }\n}, {\n    isInput: true,\n    _portDirection: 'out',\n    _resetPortValue(port) {\n        if (port.id == \"out\" && port.dir == \"out\") {\n            const bits = this.get('bits');\n            const mode = this.get('mode');\n            return mode == 1 ? Vector3vl.zeros(bits) : Vector3vl.xes(bits);\n        } else return IO.prototype._resetPortValue.call(this, port);\n    },\n    _checkMode() {\n        IO.prototype._checkMode.call(this);\n        this._resetPortsSignals([this.get('ports').items[0]]);\n    },\n    setInput(sig) {\n        this._setInput(sig);\n        this.trigger('userChange', this);\n    },\n    toggleInput() {\n        this.setInput(this.get('outputSignals').out.not());\n    },\n    _setInput(sig) {\n        if (sig.bits != this.get('bits'))\n            throw new Error(\"setInput: wrong number of bits\");\n        this.set('outputSignals', { out: sig });\n    },\n    markupSingle: IO.prototype.markupSingle.concat([{\n            tagName: 'rect',\n            className: 'btnface',\n            selector: 'btnface'\n        }\n    ]),\n    markupBus: IO.prototype.markupBus.concat([{\n            tagName: 'foreignObject',\n            className: 'valinput',\n            children: [{\n                tagName: 'body',\n                namespaceURI: 'http://www.w3.org/1999/xhtml',\n                children: [{\n                    tagName: 'input',\n                    attributes: { type: 'text' }\n                }]\n            }]\n        }\n    ]),\n    numbaseType: 'read'\n});\nexport const InputView = IOView.extend({\n    attrs: _.merge({\n        button: {\n            high: { btnface: { 'fill': 'black' } },\n            low: { btnface: { 'fill': 'white' } }\n        }\n    }, IOView.prototype.attrs),\n    confirmUpdate(flags) {\n        IOView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL2') ||\n            this.hasFlag(flags, 'NUMBASE')) this._updateView();\n    },\n    _updateView() {\n        switch (this.model.get('mode')) {\n            case 1: this._updateButton(); break;\n            case 2: this._updateNumEntry(); break;\n        }\n    },\n    _updateButton() {\n        const signal = this.model.get('outputSignals').out;\n        const attrs = this.attrs.button[\n            signal.isHigh ? 'high' : 'low'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateNumEntry() {\n        const display3vl = this.model.graph._display3vl;\n        this.$('input').val(display3vl.show(this.model.get('numbase'), this.model.get('outputSignals').out));\n        this.$('input').removeClass('invalid');\n    },\n    render() {\n        IOView.prototype.render.apply(this, arguments);\n        this._updateView();\n    },\n    events: _.merge({\n        //button\n        \"click .btnface\": \"_onButton\",\n        \"mousedown .btnface\": \"stopprop\", // Prevent drag\n        \"touchstart .btnface\": \"stopprop\", // Prevent drag & make sure click is generated\n        //numEntry\n        \"click input\": \"stopprop\",\n        \"mousedown input\": \"stopprop\", // Prevent drag\n        \"touchstart input\": \"stopprop\", // Prevent drag & make sure the input receives focus\n        \"change input\": \"_onNumEntry\"\n    }, NumBaseView.prototype.events),\n    _onButton() {\n        this.model.toggleInput();\n    },\n    _onNumEntry(evt) {\n        const numbase = this.model.get('numbase');\n        const bits = this.model.get('bits');\n        const display3vl = this.model.graph._display3vl;\n        if (display3vl.validate(numbase, evt.target.value, bits)) {\n            const val = display3vl.read(numbase, evt.target.value, bits);\n            this.model.setInput(val);\n        } else {\n            this.$('input').addClass('invalid');\n        }\n    }\n});\n\n// legacy special input models, now replaced by Input\nexport const Button = Input;\nexport const ButtonView = InputView;\nexport const NumEntry = Input;\nexport const NumEntryView = InputView;\n\n// Output model\nexport const Output = IO.define('Output', {\n    attrs: {\n        led: {\n            refX: .5, refY: .5, refR: .35\n        },\n        value: {\n            refX: .5, refY: .5,\n            textVerticalAnchor: 'middle',\n            text: '0'\n        }\n    }\n}, {\n    isOutput: true,\n    _portDirection: 'in',\n    getOutput() {\n        return this.get('inputSignals').in;\n    },\n    markupSingle: IO.prototype.markupSingle.concat([{\n            tagName: 'circle',\n            className: 'led',\n            selector: 'led'\n        }\n    ]),\n    markupBus: IO.prototype.markupBus.concat([{\n            tagName: 'text',\n            className: 'value numvalue',\n            selector: 'value'\n        }\n    ]),\n    numbaseType: 'show'\n});\nexport const OutputView = IOView.extend({\n    attrs: _.merge({\n        lamp: {\n            high: { led: { 'fill': '#03c03c' } },\n            low: { led: { 'fill': '#fc7c68' } },\n            undef: { led: { 'fill': '#bfc5c6' } }\n        }\n    }, IOView.prototype.attrs),\n    confirmUpdate(flags) {\n        IOView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL') ||\n            this.hasFlag(flags, 'NUMBASE')) this._updateView();\n    },\n    _updateView() {\n        switch (this.model.get('mode')) {\n            case 1: this._updateLamp(); break;\n            case 2: this._updateNumDisplay(); break;\n        }\n    },\n    _updateLamp() {\n        const signal = this.model.get('inputSignals').in;\n        const attrs = this.attrs.lamp[\n            signal.isHigh ? 'high' :\n            signal.isLow ? 'low' : 'undef'\n        ];\n        this._applyAttrs(attrs);\n    },\n    _updateNumDisplay() {\n        const display3vl = this.model.graph._display3vl;\n        this.$('text.value tspan').text(display3vl.show(this.model.get('numbase'), this.model.get('inputSignals').in));\n    },\n    render() {\n        IOView.prototype.render.apply(this, arguments);\n        this._updateView();\n    }\n});\n\n// legacy special output models, now replaced by Output\nexport const Lamp = Output;\nexport const LampView = OutputView;\n\nexport const NumDisplay = Output;\nexport const NumDisplayView = OutputView;\n\n// Constant\nexport const Constant = NumBase.define('Constant', {\n    /* default properties */\n    constant: '0',\n    propagation: 0,\n\n    attrs: {\n        value: {\n            refX: .5, refY: .5,\n            textVerticalAnchor: 'middle',\n            text: '0'\n        }\n    }\n}, {\n    initialize() {\n        const constant = this.get('constant');\n        const bits = constant.length;\n        this.set('bits', bits);\n        this.get('ports').items = [\n            { id: 'out', group: 'out', dir: 'out', bits: bits }\n        ];\n        \n        NumBase.prototype.initialize.apply(this, arguments);\n       \n        this.on('change:constant', (_, constant) => {\n            const bits = constant.length;\n            this._setPortsBits({ out: bits });\n            this.set('bits', bits);\n            this.set('constantCache', Vector3vl.fromBin(constant, bits));\n        });\n    },\n    prepare() {\n        const constant = this.get('constant');\n        const bits = constant.length;\n        this.set('constantCache', Vector3vl.fromBin(constant, bits));\n    },\n    operation() {\n        return { out: this.get('constantCache') };\n    },\n    markup: NumBase.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'value numvalue',\n            selector: 'value'\n        }\n    ]),\n    _gateParams: NumBase.prototype._gateParams.concat(['constant']),\n    numbaseType: 'show'\n});\nexport const ConstantView = NumBaseView.extend({\n    presentationAttributes: NumBaseView.addPresentationAttributes({\n        constantCache: 'CONSTANT'\n    }),\n    confirmUpdate(flags) {\n        NumBaseView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'CONSTANT') ||\n            this.hasFlag(flags, 'NUMBASE')) this._showText();\n    },\n    _showText() {\n        const display3vl = this.model.graph._display3vl;\n        this.$('text.value tspan').text(display3vl.show(this.model.get('numbase'), this.model.get('constantCache')));\n    },\n    update() {\n        NumBaseView.prototype.update.apply(this, arguments);\n        this._showText();\n    }\n});\n\n// Clock\nexport const Clock = Box.define('Clock', {\n    /* default properties */\n    propagation: 100,\n\n    ports: {\n        items: [\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ]\n    },\n\n    size: { width: 30, height: 30 }\n}, {\n    _resetPortValue(port) {\n        if (port.id == \"out\" && port.dir == \"out\") {\n            return Vector3vl.zero;\n        } else return Box.prototype._resetPortValue(port);\n    },\n    operation() {\n        // trigger next clock edge\n        return { out: this.get('outputSignals').out.not(), _clock_hack: true };\n    },\n    tooltipMinWidth: 55,\n    markup: Box.prototype.markup.concat([{\n            tagName: 'path',\n            className: 'decor',\n            attributes: { d: 'M7.5 7.5 L7.5 22.5 L15 22.5 L15 7.5 L22.5 7.5 L22.5 22.5', stroke: 'black' }\n        }, {\n            tagName: 'foreignObject',\n            className: 'tooltip',\n            selector: 'tooltip',\n            children: [{\n                tagName: 'body',\n                namespaceURI: 'http://www.w3.org/1999/xhtml',\n                children: [{\n                    tagName: 'input',\n                    attributes: { type: 'number', min: 1, step: 1 }\n                }]\n            }]\n        }\n    ]),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['bits'])\n});\nexport const ClockView = BoxView.extend({\n    presentationAttributes: BoxView.addPresentationAttributes({\n        propagation: 'SIGNAL'\n    }),\n    events: {\n        \"click input\": \"stopprop\",\n        \"mousedown input\": \"stopprop\",\n        \"touchstart input\": \"stopprop\", // make sure the input receives focus\n        \"change input\": \"_changePropagation\",\n        \"input input\": \"_changePropagation\"\n    },\n    render(args) {\n        BoxView.prototype.render.apply(this, arguments);\n        this.updatePropagation();\n    },\n    confirmUpdate(flags) {\n        BoxView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL')) this.updatePropagation();\n    },\n    _changePropagation(evt) {\n        const val = evt.target.value;\n        const valid = String(val) == String(Number(val));\n        if (valid) this.model.set('propagation', Number(val) || 1);\n        this.$('input').toggleClass('invalid', !valid);\n    },\n    updatePropagation() {\n        this.$('input').val(this.model.get('propagation'));\n    }\n});\n\n","\"use strict\";\n\nimport { Vector3vl, Display3vlWithRegex, Display3vl } from '3vl';\n\nconst controlCodes20 = [\n    'NUL', 'SOH', 'STX', 'ETX', 'EOT', 'ENQ', 'ACK', 'BEL', \n    'BS',  'HT',  'LF',  'VT',  'FF',  'CR',  'SO',  'SI', \n    'DLE', 'DC1', 'DC2', 'DC3', 'DC4', 'NAK', 'SYN', 'ETB',\n    'CAN', 'EM',  'SUB', 'ESC', 'FS',  'GS',  'RS',  'US',\n    'SP',  'DEL'];\n\nexport class Display3vlASCII extends Display3vlWithRegex {\n    constructor() {\n        super('[\\x20-\\x7e\\xa0-\\xff\\ufffd\\u2400-\\u2421]|' + controlCodes20.join('|'))\n    }\n    get name() {\n        return \"ascii\";\n    }\n    get sort() {\n        return 1;\n    }\n    can(kind, bits) {\n        return bits == 7 || bits == 8;\n    }\n    read(data, bits) {\n        if (data.length == 1) {\n            const code = data.charCodeAt(0);\n            if (code == 0xfffd) return Vector3vl.xes(bits);\n            if (code == 0x2421) return Vector3vl.fromHex(\"7f\", bits);\n            if (code >= 0x2400 && code <= 0x2420) \n                return Vector3vl.fromHex((code - 0x2400).toString(16), bits);\n            return Vector3vl.fromHex(code.toString(16), bits);\n        } else {\n            const code = controlCodes20.indexOf(data);\n            if (code < 0) return Vector3vl.xes(bits);\n            if (code == 0x21) return Vector3vl.fromHex(\"7f\", bits);\n            return Vector3vl.fromHex(code.toString(16), bits);\n        }\n    }\n    show(data) {\n        if (!data.isFullyDefined) return \"\\ufffd\";\n        const code = parseInt(data.toHex(), 16);\n        if (code <= 0x20) {\n            return String.fromCharCode(0x2400 + code);\n        }\n        if (code == 0x7f) return \"\\u2421\";\n        if (code > 0x7f && code < 0xa0) {\n            return \"\\ufffd\";\n        }\n        return String.fromCharCode(code);\n    }\n    size(bits) {\n        return 1;\n    }\n}\n\n        \nexport function baseSelectMarkupHTML(display3vl, bits, base) { \n    const markup = display3vl.usableDisplays('read', bits)\n        .map(n => '<option value=\"' + n + '\"' + (n == base ? ' selected=\"selected\"' : '') +'>' + n + '</option>');\n    return '<select name=\"base\">' + markup.join(\"\") + '</select>';\n};\n\nexport function eqSigs(sigs1, sigs2) {\n    for (const k in sigs2) {\n        if (!sigs1[k].eq(sigs2[k])) return false;\n    }\n    return true;\n};\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Gate, GateView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\nconst and_path = \"M19 0v32h16c9 0 16-7 16-16S44 0 35 0H20z\";\nconst or_path = \"M14.3 0l1.6 2s4.5 5.6 4.5 14s-4.5 14-4.5 14l-1.6 2H28c3.8 0 16.6-.5 25-16h0A28 28 0 0028 0H16.8z\";\nconst buf_path = \"M18-2v36l2-1 32-17h0L20-1z\";\nconst xor_arc_path = \"M6.8-1.2 10 2.7S14.2 8 14.2 16S10 29.3 10 29.3l-3.2 3.9H10l1.7-2.4s4.8-6 4.8-14.8c0-8.9-4.8-14.8-4.8-14.8l-1.7-2.4z\";\n    \nconst xor_arc_path_markup = {\n    tagName: 'path',\n    selector: 'xor_arc',\n    attributes: {\n        'fill': \"#000\",\n        'd': xor_arc_path\n    }\n};\n\nconst neg_markup = {\n    tagName: 'circle',\n    className: 'body',\n    selector: 'neg_bubble',\n    attributes: {\n        'stroke': \"#000\",\n        'stroke-width': '2px',\n        'cx': 56,\n        'cy': 16,\n        'r': 4\n    }\n};\n\nfunction gateMarkup(children = []) {\n    return {\n        tagName: 'g',\n        selector: 'body',\n        children: [\n            {\n                tagName: 'path',\n                className: 'body gate',\n                selector: 'gate'\n            }\n        ].concat(children)\n    }\n}\n\n// base class for gates\nexport const GateSVG = Gate.define('GateSVG', {\n    /* default properties */\n    bits: 1,\n\n    size: { width: 60, height: 32 },\n    ports: {\n        groups: {\n            'in': { position: { name: 'left', args: { dx: 30 } }, attrs: { wire: { x2: -50 }, port: { refX: -50 } }, z: -1 },\n            'out': { position: { name: 'right', args: { dx: -30 } }, attrs: { wire: { x2: 50 }, port: { refX: 50 } }, z: -1 }\n        }\n    }\n}, {\n    markup: Gate.prototype.markup.concat([gateMarkup()]),\n    _gateParams: Gate.prototype._gateParams.concat(['bits'])\n});\n\n// Single-input gate model\nexport const Gate11 = GateSVG.define('Gate11', {}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits },\n            { id: 'out', group: 'out', dir: 'out', bits: bits }\n        ];\n        \n        GateSVG.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits({ in: bits, out: bits });\n        });\n    }\n});\n\n// Multi-input gate model\nexport const GateX1 = GateSVG.define('GateX1', {\n    /* default properties */\n    inputs: 2,\n\n    attrs: {\n        gate: {\n            'vector-effect': 'non-scaling-stroke'\n        },\n        xor_arc: {\n            'vector-effect': 'non-scaling-stroke'\n        },\n        neg_bubble: {\n            'vector-effect': 'non-scaling-stroke'\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const inputs = this.get('inputs');\n\n        const ports = [];\n        for (let i = 1; i <= inputs; i++)\n            ports.push({ id: 'in' + i, group: 'in', dir: 'in', bits: bits });\n        ports.push({ id: 'out', group: 'out', dir: 'out', bits: bits });\n        this.get('ports').items = ports;\n        const scaling = inputs / 2;\n        this.set('size', { width: 60 * scaling, height: 32 * scaling });\n        this.attr('body/transform', 'translate(-4, 0) scale('+scaling+')');\n\n        this.prop('ports/groups/in/position/args/dx', 30 * scaling);\n        this.prop('ports/groups/in/attrs/wire/x2', -30 * scaling - 20);\n        this.prop('ports/groups/in/attrs/port/refX', -30 * scaling - 20);\n        this.prop('ports/groups/out/position/args/dx', -30 * scaling);\n        this.prop('ports/groups/out/attrs/wire/x2', 30 * scaling + 20);\n        this.prop('ports/groups/out/attrs/port/refX', 30 * scaling + 20);\n\n        GateSVG.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            const inputs = this.get('inputs');\n            const param = { out: bits };\n            for (let i = 1; i <= inputs; i++)\n                param['in' + i] = bits;\n            this._setPortsBits(param);\n        });\n    },\n    operation(data) {\n        let ret = data.in1;\n        for (let i = 2; i <= this.get('inputs'); i++)\n            ret = this.binoperation(ret, data['in' + i]);\n        return { out: this.finoperation(ret) };\n    },\n    finoperation(val) {\n        return val\n    },\n    _gateParams: GateSVG.prototype._gateParams.concat(['inputs']),\n    _unsupportedPropChanges: GateSVG.prototype._unsupportedPropChanges.concat(['inputs']),\n    _operationHelpers: GateSVG.prototype._operationHelpers.concat(['binoperation', 'finoperation'])\n});\n\n// Reducing gate model\nexport const GateReduce = GateSVG.define('GateReduce', {}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits },\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ];\n        \n        GateSVG.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits({ in: bits });\n        });\n    }\n});\n\n// Repeater (buffer) gate model\nexport const Repeater = Gate11.define('Repeater', {\n    attrs: { gate: { d: buf_path }}\n}, {\n    operation(data) {\n        return { out: data.in };\n    }\n});\nexport const RepeaterView = GateView;\n\n// Not gate model\nexport const Not = Gate11.define('Not', {\n    attrs: { gate: { d: buf_path }}\n}, {\n    operation(data) {\n        return { out: data.in.not() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NotView = GateView;\n\n// Or gate model\nexport const Or = GateX1.define('Or', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.or(in2);\n    }\n});\nexport const OrView = GateView;\n\n// And gate model\nexport const And = GateX1.define('And', {\n    attrs: { gate: { d: and_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.and(in2);\n    }\n});\nexport const AndView = GateView;\n\n// Nor gate model\nexport const Nor = GateX1.define('Nor', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.or(in2);\n    },\n    finoperation(val) {\n        return val.not();\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NorView = GateView;\n\n// Nand gate model\nexport const Nand = GateX1.define('Nand', {\n    attrs: { gate: { d: and_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.and(in2);\n    },\n    finoperation(val) {\n        return val.not();\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NandView = GateView;\n\n// Xor gate model\nexport const Xor = GateX1.define('Xor', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.xor(in2);\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup])]),\n});\nexport const XorView = GateView;\n\n// Xnor gate model\nexport const Xnor = GateX1.define('Xnor', {\n    attrs: { gate: { d: or_path }}\n}, {\n    binoperation(in1, in2) {\n        return in1.xor(in2);\n    },\n    finoperation(val) {\n        return val.not();\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup, neg_markup])]),\n});\nexport const XnorView = GateView;\n\n// Reducing Or gate model\nexport const OrReduce = GateReduce.define('OrReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceOr() };\n    }\n});\nexport const OrReduceView = GateView;\n\n// Reducing Nor gate model\nexport const NorReduce = GateReduce.define('NorReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceNor() };\n    },\n    markup: GateReduce.prototype.markup.concat([neg_markup])\n});\nexport const NorReduceView = GateView;\n\n// Reducing And gate model\nexport const AndReduce = GateReduce.define('AndReduce', {\n    attrs: { gate: { d: and_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceAnd() };\n    }\n});\nexport const AndReduceView = GateView;\n\n// Reducing Nand gate model\nexport const NandReduce = GateReduce.define('NandReduce', {\n    attrs: { gate: { d: and_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceNand() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([neg_markup])]),\n});\nexport const NandReduceView = GateView;\n\n// Reducing Xor gate model\nexport const XorReduce = GateReduce.define('XorReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceXor() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup])]),\n});\nexport const XorReduceView = GateView;\n\n// Reducing Xnor gate model\nexport const XnorReduce = GateReduce.define('XnorReduce', {\n    attrs: { gate: { d: or_path }}\n}, {\n    operation(data) {\n        return { out: data.in.reduceXnor() };\n    },\n    markup: Gate.prototype.markup.concat([gateMarkup([xor_arc_path_markup, neg_markup])]),\n});\nexport const XnorReduceView = GateView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Gate, GateView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\nfunction isSafeInteger(v) {\n    return v <= Number.MAX_SAFE_INTEGER && v >= -Number.MAX_SAFE_INTEGER;\n}\n\n// base class for arithmetic operations displayed with a circle\nexport const Arith = Gate.define('Arith', {\n    size: { width: 40, height: 40 },\n    attrs: {\n        body: { refR: 0.5, refCx: 0.5, refCy: 0.5 },\n        oper: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle',\n            fontSize: '12pt'\n        }\n    },\n    ports: {\n        groups: {\n            'in': { position: { name: 'left', args: { dx: 10 } }, attrs: { wire: { x2: -35 }, port: { refX: -35 } }, z: -1 },\n            'out': { position: { name: 'right', args: { dx: -10 } }, attrs: { wire: { x2: 35 }, port: { refX: 35 } }, z: -1 }\n        }\n    }\n}, {\n    markup: Gate.prototype.markup.concat([{\n            tagName: 'circle',\n            className: 'body',\n            selector: 'body'\n        }, {\n            tagName: 'text',\n            className: 'oper',\n            selector: 'oper'\n        }\n    ]),\n    _gateParams: Gate.prototype._gateParams.concat(['bits', 'signed']),\n    _unsupportedPropChanges: Gate.prototype._unsupportedPropChanges.concat(['signed'])\n});\n\n// Unary arithmetic operations\nexport const Arith11 = Arith.define('Arith11', {\n    /* default properties */\n    bits: { in: 1, out: 1 },\n    signed: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_,bits) => {\n            this._setPortsBits(bits);\n        });\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        if (!data.in.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        return {\n            out: Vector3vl.fromNumber(this.arithop(data.in.toBigInt(this.get('signed'))), bits.out)\n        };\n    },\n    _operationHelpers: Arith.prototype._operationHelpers.concat(['arithop'])\n});\n\n// Binary arithmetic operations\nexport const Arith21 = Arith.define('Arith21', {\n    /* default properties */\n    bits: { in1: 1, in2: 1, out: 1 },\n    signed: { in1: false, in2: false }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in1', group: 'in', dir: 'in', bits: bits.in1 },\n            { id: 'in2', group: 'in', dir: 'in', bits: bits.in2 },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        if (!data.in1.isFullyDefined || !data.in2.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        return {\n            out: Vector3vl.fromNumber(this.arithop(\n                    data.in1.toBigInt(sgn.in1 && sgn.in2),\n                    data.in2.toBigInt(sgn.in1 && sgn.in2)), bits.out)\n        };\n    },\n    _operationHelpers: Arith.prototype._operationHelpers.concat(['arithop'])\n});\n\nfunction shiftHelp(in1, am, bits_in, bits_out, sgn_in, sgn_out, fillx) {\n    const signbit = in1.get(in1.bits-1);\n    const ext = Vector3vl.make(Math.max(0, bits_out - bits_in),\n        fillx ? 0 : sgn_in ? signbit : -1);\n    const my_in = in1.concat(ext);\n    const out = am < 0\n        ? Vector3vl.make(-am, fillx ? 0 : -1).concat(my_in)\n        : my_in.slice(am).concat(Vector3vl.make(am, fillx ? 0 : sgn_out ? my_in.get(my_in.bits-1) : -1));\n    return out.slice(0, bits_out);\n}\n\n// Bit shift operations\nexport const Shift = Arith.define('Shift', {\n    /* default properties */\n    bits: { in1: 1, in2: 1, out: 1 },\n    signed: { in1: false, in2: false, out: false },\n    fillx: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in1', group: 'in', dir: 'in', bits: bits.in1 },\n            { id: 'in2', group: 'in', dir: 'in', bits: bits.in2 },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const fillx = this.get('fillx');\n        if (!data.in2.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        const am = data.in2.toNumber(sgn.in2) * this.shiftdir;\n        return { out: shiftHelp(data.in1, am, bits.in1, bits.out, sgn.in1, sgn.out, fillx) };\n    },\n    _gateParams: Arith.prototype._gateParams.concat(['fillx']),\n    _unsupportedPropChanges: Arith.prototype._unsupportedPropChanges.concat(['fillx']),\n    _operationHelpers: Arith.prototype._operationHelpers.concat(['shiftdir'])\n});\n\n// Comparison operations\nexport const BaseCompare = Arith.define('BaseCompare', {\n    /* default properties */\n    bits: { in1: 1, in2: 1 },\n    signed: { in1: false, in2: false }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in1', group: 'in', dir: 'in', bits: bits.in1 },\n            { id: 'in2', group: 'in', dir: 'in', bits: bits.in2 },\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ];\n        \n        Arith.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n    }\n});\n\n// Arithmetic comparison operations\nexport const Compare = BaseCompare.define('Compare', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        if (!data.in1.isFullyDefined || !data.in2.isFullyDefined)\n            return { out: Vector3vl.xes(1) };\n        return {\n            out: Vector3vl.fromBool(this.arithcomp(\n                    data.in1.toBigInt(sgn.in1 && sgn.in2),\n                    data.in2.toBigInt(sgn.in1 && sgn.in2)))\n        };\n    },\n    _operationHelpers: BaseCompare.prototype._operationHelpers.concat(['arithcomp'])\n});\n\n// Equality operations\nexport const EqCompare = BaseCompare.define('EqCompare', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const in1 = bits.in1 >= bits.in2 ? data.in1 : \n            data.in1.concat(Vector3vl.make(bits.in2 - bits.in1, sgn.in1 && sgn.in2 ? data.in1.msb : -1));\n        const in2 = bits.in2 >= bits.in1 ? data.in2 : \n            data.in2.concat(Vector3vl.make(bits.in1 - bits.in2, sgn.in1 && sgn.in2 ? data.in2.msb : -1));\n        return {\n            out: this.bincomp(in1, in2)\n        };\n    },\n    _operationHelpers: BaseCompare.prototype._operationHelpers.concat(['bincomp'])\n});\n\n// Negation\nexport const Negation = Arith11.define('Negation', {\n    attrs: {\n        oper: { text: '-' }\n    }\n}, {\n    arithop: i => -i\n});\nexport const NegationView = GateView;\n\n// Unary plus\nexport const UnaryPlus = Arith11.define('UnaryPlus', {\n    attrs: {\n        oper: { text: '+' }\n    }\n}, {\n    arithop: i => i\n});\nexport const UnaryPlusView = GateView;\n\n// Addition\nexport const Addition = Arith21.define('Addition', {\n    attrs: {\n        oper: { text: '+' }\n    }\n}, {\n    arithop: (i, j) => i + j\n});\nexport const AdditionView = GateView;\n\n// Subtraction\nexport const Subtraction = Arith21.define('Subtraction', {\n    attrs: {\n        oper: { text: '-' }\n    }\n}, {\n    arithop: (i, j) => i - j\n});\nexport const SubtractionView = GateView;\n\n// Multiplication\nexport const Multiplication = Arith21.define('Multiplication', {\n    attrs: {\n        oper: { text: '×' }\n    }\n}, {\n    arithop: (i, j) => i * j\n});\nexport const MultiplicationView = GateView;\n\n// Division\nexport const Division = Arith21.define('Division', {\n    attrs: {\n        oper: { text: '÷' }\n    }\n}, {\n    arithop: (i, j) => j == 0n ? i : i / j // as in IEEE Verilog\n});\nexport const DivisionView = GateView;\n\n// Modulo\nexport const Modulo = Arith21.define('Modulo', {\n    attrs: {\n        oper: { text: '%' }\n    }\n}, {\n    arithop: (i, j) => j == 0n ? i : i % j // as in IEEE Verilog\n});\nexport const ModuloView = GateView;\n\n// Power\nexport const Power = Arith21.define('Power', {\n    attrs: {\n        oper: { text: '^' }\n    }\n}, {\n    arithop: (i, j) => j >= 0n ? i ** j : i == 1n ? 1n : i == -1n ? (j % 2n ? -1n : 1n) : 0n\n});\nexport const PowerView = GateView;\n\n// Shift left operator\nexport const ShiftLeft = Shift.define('ShiftLeft', {\n    attrs: {\n        oper: { text: '≪' }\n    }\n}, {\n    shiftdir: -1\n});\nexport const ShiftLeftView = GateView;\n\n// Shift right operator\nexport const ShiftRight = Shift.define('ShiftRight', {\n    attrs: {\n        oper: { text: '≫' }\n    }\n}, {\n    shiftdir: 1\n});\nexport const ShiftRightView = GateView;\n\n// Less than operator\nexport const Lt = Compare.define('Lt', {\n    attrs: {\n        oper: { text: '<' }\n    }\n}, {\n    arithcomp: (i, j) => i < j\n});\nexport const LtView = GateView;\n\n// Less or equal operator\nexport const Le = Compare.define('Le', {\n    attrs: {\n        oper: { text: '≤' }\n    }\n}, {\n    arithcomp: (i, j) => i <= j\n});\nexport const LeView = GateView;\n\n// Greater than operator\nexport const Gt = Compare.define('Gt', {\n    attrs: {\n        oper: { text: '>' }\n    }\n}, {\n    arithcomp: (i, j) => i > j\n});\nexport const GtView = GateView;\n\n// Less than operator\nexport const Ge = Compare.define('Ge', {\n    attrs: {\n        oper: { text: '≥' }\n    }\n}, {\n    arithcomp: (i, j) => i >= j\n});\nexport const GeView = GateView;\n\n// Equality operator\nexport const Eq = EqCompare.define('Eq', {\n    attrs: {\n        oper: { text: '=' }\n    }\n}, {\n    bincomp: (i, j) => i.xnor(j).reduceAnd()\n});\nexport const EqView = GateView;\n\n// Nonequality operator\nexport const Ne = EqCompare.define('Ne', {\n    attrs: {\n        oper: { text: '≠' }\n    }\n}, {\n    bincomp: (i, j) => i.xor(j).reduceOr()\n});\nexport const NeView = GateView;\n\nexport const OpConst = Arith.define('OpConst', {\n    leftOp: false,\n    constant: 0\n}, {\n    initialize() {\n        Arith.prototype.initialize.apply(this, arguments);\n\n        let constant = this.get('constant');\n        if (typeof constant === 'string' || constant instanceof String) {\n            constant = BigInt(constant);\n            if (isSafeInteger(constant))\n                constant = Number(constant);\n            this.set('constant', constant);\n        }\n        const genLabel = () => {\n            const constantSize = String(this.get('constant')).length;\n            const diameter = 30 + constantSize * 10;\n            this.prop(\"size\", { width: diameter, height: diameter });\n            this.attr(\"oper/text\", \n                this.get('leftOp') ? this.get('constant') + this.operSymbol\n                                   : this.operSymbol + this.get('constant'))\n        };\n        genLabel();\n\n        this.on('change:bits', (_, bits) => {\n            this._setPortsBits(bits);\n        });\n        this.on('change:constant', () => genLabel());\n        this.on('change:leftOp', () => genLabel());\n    },\n    getGateParams() {\n        const params = Arith.prototype.getGateParams.apply(this, arguments);\n        // `constant` may be a bigint and we need to encode it manually\n        if (typeof params.constant === 'bigint') {\n            if (isSafeInteger(params.constant)) {\n                params.constant = Number(params.constant);\n            }\n            else {\n                params.constant = String(params.constant);\n            }\n        }\n        return params;\n    },\n    _gateParams: Arith.prototype._gateParams.concat(['leftOp', 'constant'])\n});\n\n// Arithmetic operations fused with constants\nexport const ArithConst = OpConst.define('ArithConst', {\n    /* default properties */\n    bits: { in: 1, out: 1 },\n    signed: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        OpConst.prototype.initialize.apply(this, arguments);\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const constant = this.get('constant');\n        if (!data.in.isFullyDefined)\n            return { out: Vector3vl.xes(bits.out) };\n        if (this.get('leftOp'))\n            return {\n                out: Vector3vl.fromNumber(this.arithop(\n                    BigInt(constant),\n                    data.in.toBigInt(sgn.in)), bits.out)\n            }\n        else\n            return {\n                out: Vector3vl.fromNumber(this.arithop(\n                    data.in.toBigInt(sgn.in), BigInt(constant)), bits.out)\n            };\n    },\n    _operationHelpers: OpConst.prototype._operationHelpers.concat(['arithop'])\n});\n\n// Bit shift operations fused with constants\nexport const ShiftConst = OpConst.define('ShiftConst', {\n    /* default properties */\n    bits: { in: 1, out: 1 },\n    signed: { in: false, out: false },\n    fillx: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out }\n        ];\n        \n        OpConst.prototype.initialize.apply(this, arguments);\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const fillx = this.get('fillx');\n        const constant = this.get('constant');\n        if (this.get('leftOp')) {\n            if (!data.in.isFullyDefined)\n                return { out: Vector3vl.xes(bits.out) };\n            const am = data.in.toNumber(sgn.in);\n            const sig = Vector3vl.fromNumber(constant);\n            return { \n                out: shiftHelp(sig, am * this.shiftdir, sig.bits, bits.out, constant < 0, sgn.out, fillx) \n            };\n        } else {\n            console.assert(isSafeInteger(constant));\n            return {\n                out: shiftHelp(data.in, Number(constant) * this.shiftdir, bits.in, bits.out, sgn.in, sgn.out, fillx)\n            };\n        }\n    },\n    _gateParams: OpConst.prototype._gateParams.concat(['fillx']),\n    _operationHelpers: OpConst.prototype._operationHelpers.concat(['shiftdir'])\n});\n\n// Comparison operations fused with constants\nexport const BaseCompareConst = OpConst.define('BaseCompareConst', {\n    /* default properties */\n    bits: { in: 1 },\n    signed: false\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in },\n            { id: 'out', group: 'out', dir: 'out', bits: 1 }\n        ];\n        \n        OpConst.prototype.initialize.apply(this, arguments);\n    }\n});\n\n// Arithmetic comparisons fused with constants\nexport const CompareConst = BaseCompareConst.define('CompareConst', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const constant = this.get('constant');\n        if (!data.in.isFullyDefined)\n            return { out: Vector3vl.x };\n        if (this.get('leftOp'))\n            return {\n                out: Vector3vl.fromBool(this.arithcomp(\n                    BigInt(constant),\n                    data.in.toBigInt(sgn.in)))\n            }\n        else\n            return {\n                out: Vector3vl.fromBool(this.arithcomp(\n                    data.in.toBigInt(sgn.in), \n                    BigInt(constant)))\n            };\n    },\n    _operationHelpers: BaseCompareConst.prototype._operationHelpers.concat(['arithcomp'])\n});\n\n// Equality operations fused with constants\nexport const EqCompareConst = BaseCompareConst.define('EqCompareConst', {}, {\n    operation(data) {\n        const bits = this.get('bits');\n        const sgn = this.get('signed');\n        const constant = this.get('constant');\n        if (this.get('leftOp'))\n            return {\n                out: this.bincomp(Vector3vl.fromNumber(constant, bits.in), data.in)\n            };\n        else\n            return {\n                out: this.bincomp(data.in, Vector3vl.fromNumber(constant, bits.in))\n            };\n    },\n    _operationHelpers: BaseCompareConst.prototype._operationHelpers.concat(['bincomp'])\n});\n\n// Addition with constant\nexport const AdditionConst = ArithConst.define('AdditionConst', {}, {\n    operSymbol: '+',\n    arithop: (i, j) => i + j\n});\nexport const AdditionConstView = GateView;\n\n// Subtraction with constant\nexport const SubtractionConst = ArithConst.define('SubtractionConst', {}, {\n    operSymbol: '-',\n    arithop: (i, j) => i - j\n});\nexport const SubtractionConstView = GateView;\n\n// Multiplication with constant\nexport const MultiplicationConst = ArithConst.define('MultiplicationConst', {}, {\n    operSymbol: '×',\n    arithop: (i, j) => i * j\n});\nexport const MultiplicationConstView = GateView;\n\n// Division with constant\nexport const DivisionConst = ArithConst.define('DivisionConst', {}, {\n    operSymbol: '÷',\n    arithop: (i, j) => j == 0n ? i : i / j // as in IEEE Verilog\n});\nexport const DivisionConstView = GateView;\n\n// Modulo with constant\nexport const ModuloConst = ArithConst.define('ModuloConst', {}, {\n    operSymbol: '%',\n    arithop: (i, j) => j == 0n ? i : i % j // as in IEEE Verilog\n});\nexport const ModuloConstView = GateView;\n\n// Power with constant\nexport const PowerConst = ArithConst.define('PowerConst', {}, {\n    operSymbol: '^',\n    arithop: (i, j) => j >= 0n ? i ** j : i == 1n ? 1n : i == -1n ? (j % 2n ? -1n : 1n) : 0n\n});\nexport const PowerConstView = GateView;\n\n// Shift left operator\nexport const ShiftLeftConst = ShiftConst.define('ShiftLeftConst', {}, {\n    operSymbol: '≪',\n    shiftdir: -1\n});\nexport const ShiftLeftConstView = GateView;\n\n// Shift right operator\nexport const ShiftRightConst = ShiftConst.define('ShiftRightConst', {}, {\n    operSymbol: '≫',\n    shiftdir: 1\n});\nexport const ShiftRightConstView = GateView;\n\n// Less than operator\nexport const LtConst = CompareConst.define('LtConst', {}, {\n    operSymbol: '<',\n    arithcomp: (i, j) => i < j\n});\nexport const LtConstView = GateView;\n\n// Less than operator\nexport const LeConst = CompareConst.define('LeConst', {}, {\n    operSymbol: '≤',\n    arithcomp: (i, j) => i <= j\n});\nexport const LeConstView = GateView;\n\n// Less than operator\nexport const GtConst = CompareConst.define('GtConst', {}, {\n    operSymbol: '>',\n    arithcomp: (i, j) => i > j\n});\nexport const GtConstView = GateView;\n\n// Less than operator\nexport const GeConst = CompareConst.define('GeConst', {}, {\n    operSymbol: '≥',\n    arithcomp: (i, j) => i >= j\n});\nexport const GeConstView = GateView;\n\n// Equality operator\nexport const EqConst = EqCompareConst.define('EqConst', {}, {\n    operSymbol: '=',\n    bincomp: (i, j) => i.xnor(j).reduceAnd()\n});\nexport const EqConstView = GateView;\n\n// Nonequality operator\nexport const NeConst = EqCompareConst.define('NeConst', {}, {\n    operSymbol: '≠',\n    bincomp: (i, j) => i.xor(j).reduceOr()\n});\nexport const NeConstView = GateView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\n// Bit extending\nexport const BitExtend = Box.define('BitExtend', {\n    /* default properties */\n    extend: { input: 1, output: 1 },\n    propagation: 0,\n    \n    attrs: {\n        value: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle'\n        }\n    }\n}, {\n    initialize() {\n        const extend = this.get('extend');\n        console.assert(extend.input <= extend.output);\n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: extend.input },\n            { id: 'out', group: 'out', dir: 'out', bits: extend.output }\n        ];\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:extend', (_, extend) => {\n            this._setPortsBits({ in: extend.input, out: extend.output });\n        });\n    },\n    operation(data) {\n        const ex = this.get('extend');\n        return { out: data.in.concat(Vector3vl.make(ex.output - ex.input, this._extBit(data.in))) };\n    },\n    markup: Box.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'value',\n            selector: 'value'\n        }\n    ]),\n    _gateParams: Box.prototype._gateParams.concat(['extend']),\n    _operationHelpers: Box.prototype._operationHelpers.concat(['_extBit'])\n});\nexport const BitExtendView = BoxView.extend({\n    _autoResizeBox: true,\n    _calculateBoxWidth() {\n        const text = this.el.querySelector('text.value');\n        return text.getBBox().width + 10;\n    }\n});\n\nexport const ZeroExtend = BitExtend.define('ZeroExtend', {\n    attrs: {\n        value: { text: 'zero-extend' }\n    }\n}, {\n    _extBit(i) {\n        return -1;\n    }\n});\nexport const ZeroExtendView = BitExtendView;\n\nexport const SignExtend = BitExtend.define('SignExtend', {\n    attrs: {\n        value: { text: 'sign-extend' }\n    }\n}, {\n    _extBit(i) {\n        return i.get(i.bits - 1);\n    }\n});\nexport const SignExtendView = BitExtendView;\n\n// Bus slicing\nexport const BusSlice = Box.define('BusSlice', {\n    /* default properties */\n    slice: { first: 0, count: 1, total: 2 },\n    propagation: 0,\n    \n    size: { width: 40, height: 24 }\n}, {\n    initialize() {\n        const slice = this.get('slice');\n        \n        const val = slice.count == 1 ? slice.first : \n            slice.first + \"-\" + (slice.first + slice.count - 1);\n        \n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: slice.total },\n            { id: 'out', group: 'out', dir: 'out', bits: slice.count, portlabel: val, labelled: true }\n        ];\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        this.on('change:slice', (_, slice) => {\n            this._setPortsBits({ in: slice.total, out: slice.count });\n        });\n    },\n    operation(data) {\n        const s = this.get('slice');\n        return { out: data.in.slice(s.first, s.first + s.count) };\n    },\n    _gateParams: Box.prototype._gateParams.concat(['slice'])\n});\nexport const BusSliceView = BoxView.extend({\n    _autoResizeBox: true\n});\n\n// Bus grouping\nexport const BusRegroup = Box.define('BusRegroup', {\n    /* default properties */\n    groups: [1],\n    propagation: 0,\n\n    size: { width: 40, height: undefined }\n}, {\n    initialize() {\n        var bits = 0;\n        const ports = [];\n        const groups = this.get('groups');\n        \n        this.get('size').height = groups.length*16+8;\n        \n        for (const [num, gbits] of groups.entries()) {\n            const lbl = bits + (gbits > 1 ? '-' + (bits + gbits - 1) : '');\n            bits += gbits;\n            ports.push({ id: this.group_dir + num, group: this.group_dir, dir: this.group_dir, bits: gbits, portlabel: lbl, labelled: true });\n        }\n        this.set('bits', bits);\n        \n        const contra = this.group_dir == 'out' ? 'in' : 'out';\n        ports.push({ id: contra, group: contra, dir: contra, bits: bits });\n        this.get('ports').items = ports;\n        \n        Box.prototype.initialize.apply(this, arguments);\n    },\n    _gateParams: Box.prototype._gateParams.concat(['groups']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['groups'])\n});\nexport const BusRegroupView = BoxView.extend({\n    _autoResizeBox: true\n});\n\nexport const BusGroup = BusRegroup.define('BusGroup', {\n}, {\n    group_dir : 'in',\n    operation(data) {\n        const outdata = [];\n        for (const num of this.get('groups').keys()) {\n            outdata.push(data['in' + num]);\n        }\n        return { out : Vector3vl.concat(...outdata) };\n    }\n});\nexport const BusGroupView = BusRegroupView;\n\nexport const BusUngroup = BusRegroup.define('BusUngroup', {\n}, {\n    group_dir : 'out',\n    operation(data) {\n        const outdata = {};\n        let pos = 0;\n        for (const [num, gbits] of this.get('groups').entries()) {\n            outdata['out' + num] = data.in.slice(pos, pos + gbits);\n            pos += gbits;\n        }\n        return outdata;\n    }\n});\nexport const BusUngroupView = BusRegroupView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\nimport { Box, BoxView } from './base.mjs';\nimport { IO, Input, Output } from './io.mjs';\nimport * as help from '../help.mjs';\n\n// add offset of 10pt to account for the top label at layout time\nconst subcircuit_pos_offset = 10;\nconst subcircuit_size_offset = 10;\n\n// Subcircuit model -- embeds a circuit graph in an element\nexport const Subcircuit = Box.define('Subcircuit', {\n    /* default properties */\n    propagation: 0,\n    warning: false,\n\n    attrs: {\n        wrapper: {\n            refWidth: 1, refHeight: 1,\n            stroke: 'red', strokeWidth: 10\n        },\n        type: {\n            refX: .5, refY: -10,\n            textAnchor: 'middle', textVerticalAnchor: 'middle'\n        }\n    }\n}, {\n    initialize() {\n        this.bindAttrToProp('text.type/text', 'celltype');\n        \n        const graph = this.get('graph');\n        console.assert(graph instanceof joint.dia.Graph);\n        graph.set('subcircuit', this);\n        const IOs = graph.getCells()\n            .filter((cell) => cell instanceof IO);\n        const inputs = IOs.filter((cell) => cell instanceof Input);\n        const outputs = IOs.filter((cell) => cell instanceof Output);\n        function sortfun(x, y) {\n            if (x.has('order') || y.has('order'))\n                return x.get('order') - y.get('order');\n            return x.get('net').localeCompare(y.get('net'));\n        }\n        inputs.sort(sortfun);\n        outputs.sort(sortfun);\n        const vcount = Math.max(inputs.length, outputs.length);\n        const size = { width: 80, height: vcount*16+8 };\n        const ports = [], iomap = {};\n        for (const [num, io] of inputs.entries()) {\n            ports.push({ id: io.get('net'), group: 'in', dir: 'in', bits: io.get('bits'), labelled: true });\n        }\n        for (const [num, io] of outputs.entries()) {\n            ports.push({ id: io.get('net'), group: 'out', dir: 'out', bits: io.get('bits'), labelled: true });\n        }\n        for (const io of IOs) {\n            iomap[io.get('net')] = io.get('id');\n        }\n        this.set('size', size);\n        this.set('circuitIOmap', iomap);\n        this.get('ports').items = ports;\n        this.set('warning', graph._warnings > 0);\n        \n        Box.prototype.initialize.apply(this, arguments);\n    },\n    _resetPortValue(port) {\n        const iomap = this.get('circuitIOmap');\n        const graph = this.get('graph');\n        if (port.dir == 'in')\n            return graph.getCell(iomap[port.id]).get('outputSignals').out;\n        if (port.dir == 'out')\n            return graph.getCell(iomap[port.id]).get('inputSignals').in;\n        return Box.prototype._resetPortValue.call(this, port);\n    },\n    getLayoutSize() {\n        const size = this.size();\n        size.height += subcircuit_size_offset;\n        return size;\n    },\n    setLayoutPosition(position) {\n        this.set('position', {\n            x: position.x,\n            y: position.y + subcircuit_pos_offset\n        });\n    },\n    getPortsPositions() {\n        const positions = Box.prototype.getPortsPositions.apply(this, arguments);\n        const res = {};\n        for (const id in positions) {\n            res[id] = { ...positions[id] };\n            res[id].y = res[id].y + subcircuit_pos_offset;\n        }\n        return res;\n    },\n    markup: [{\n            tagName: 'rect',\n            selector: 'wrapper'\n        }\n    ].concat(Box.prototype.markup, [{\n            tagName: 'text',\n            className: 'type',\n            selector: 'type'\n        }\n    ], Box.prototype.markupZoom),\n    _gateParams: Box.prototype._gateParams.concat(['celltype']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['celltype'])\n});\n\nexport const SubcircuitView = BoxView.extend({\n    attrs: _.merge({}, BoxView.prototype.attrs, {\n        warning: {\n            warn: { wrapper: { 'stroke-opacity': '0.5' } },\n            none: { wrapper: { 'stroke-opacity': '0' } }\n        }\n    }),\n    _autoResizeBox: true,\n    presentationAttributes: BoxView.addPresentationAttributes({\n        warning: 'WARNING'\n    }),\n    confirmUpdate(flags) {\n        BoxView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'WARNING')) {\n            this._updateWarning();\n        }\n    },\n    _updateWarning() {\n        const warning = this.model.get('warning');\n        const attrs = this.attrs.warning[\n            warning ? 'warn' : 'none'\n        ];\n        this._applyAttrs(attrs);\n    },\n    update() {\n        BoxView.prototype.update.apply(this, arguments);\n        this._updateWarning();\n    },\n    events: {\n        \"click foreignObject.tooltip\": \"stopprop\",\n        \"mousedown foreignObject.tooltip\": \"stopprop\",\n        \"touchstart foreignObject.tooltip\": \"stopprop\", // make sure the input receives focus\n        \"click a.zoom\": \"zoomInCircuit\"\n    },\n    zoomInCircuit(evt) {\n        evt.stopPropagation();\n        this.paper.trigger('open:subcircuit', this.model);\n        return false;\n    }\n});\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport _ from 'lodash';\nimport { Gate, GateView, portGroupAttrs } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\n// add offset of 30pt to account for the top selection port and oversized box at layout time\nconst mux_pos_offset = 20;\nconst mux_size_offset = 30;\n\n// Multiplexers\nexport const GenMux = Gate.define('GenMux', {\n    /* default properties */\n    bits: { in: 1, sel: 1 },\n    \n    size: { width: 40, height: undefined },\n    ports: {\n        groups: {\n            'in2': {\n                position: { name: 'top', args: { y: 5 } },\n                attrs: _.merge({}, portGroupAttrs, {\n                    wire: { x2: 0, y2: -25 },\n                    port: { magnet: 'passive', refY: -25 },\n                    bits: { refDx: -5, refDy: 2, textAnchor: 'start' }\n                }),\n                z: -1\n            }\n        }\n    },\n    attrs: { label: { refDy: 8 } }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const ports = [\n            { id: 'sel', group: 'in2', dir: 'in', bits: bits.sel },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.in }\n        ];\n        \n        const ins = this.muxInputs(bits.sel);\n        this.get('size').height = ins.length*16+8;\n        \n        const vpath = [\n            [2, 0],\n            [5, 5],\n            [10, -5]\n        ];\n        const path = 'M' + vpath.map(l => l.join(' ')).join(' L');\n        \n        for (const [num, label] of ins.entries()) {\n            const port = { id: 'in' + num, group: 'in', dir: 'in', bits: bits.in, decor: path };\n            if (label) {\n                port.portlabel = String(label);\n                port.labelled = true;\n            }\n            ports.push(port);\n        }\n        \n        this.get('ports').items = ports;\n        \n        Gate.prototype.initialize.apply(this, arguments);\n        \n        const drawBorder = (size) => this.attr(['body', 'points'], \n            [[0,-5],[size.width,5],[size.width,size.height-5],[0,size.height+5]]\n                .map(x => x.join(',')).join(' '));\n        drawBorder(this.get('size'));\n        \n        this.on('change:size', (_, size) => drawBorder(size));\n    },\n    operation(data) {\n        const i = this.muxInput(data.sel);\n        if (i === undefined) return { out: Vector3vl.xes(this.get('bits').in) };\n        return { out: data['in' + i] };\n    },\n    getLayoutSize() {\n        const size = this.size();\n        size.height += mux_size_offset;\n        return size;\n    },\n    setLayoutPosition(position) {\n        this.set('position', {\n            x: position.x,\n            y: position.y + mux_pos_offset\n        });\n    },\n    getPortsPositions() {\n        const positions = Gate.prototype.getPortsPositions.apply(this, arguments);\n        const res = {};\n        for (const id in positions) {\n            res[id] = { ...positions[id] };\n            res[id].y = res[id].y + mux_pos_offset;\n        }\n        return res;\n    },\n    markup: Gate.prototype.markup.concat([{\n            tagName: 'polygon',\n            className: 'body',\n            selector: 'body'\n        }\n    ]),\n    _gateParams: Gate.prototype._gateParams.concat(['bits']),\n    _unsupportedPropChanges: Gate.prototype._unsupportedPropChanges.concat(['bits']),\n    _operationHelpers: Gate.prototype._operationHelpers.concat(['muxInput'])\n});\nexport const GenMuxView = GateView.extend({\n    initialize() {\n        this.ins = this.model.muxInputs(this.model.get('bits').sel);\n        GateView.prototype.initialize.apply(this, arguments);\n    },\n    confirmUpdate(flags) {\n        GateView.prototype.confirmUpdate.apply(this, arguments);\n        if (this.hasFlag(flags, 'SIGNAL')) {\n            this._updateMux(this.model.get('inputSignals'));\n        }\n    },\n    render() {\n        GateView.prototype.render.apply(this, arguments);\n        this._updateMux(this.model.get('inputSignals'));\n    },\n    _updateMux(data) {\n        const i = this.model.muxInput(data.sel);\n        for (const num of this.ins.keys()) {\n            this.$('[port=in' + num + '] path.decor').css('visibility', i == num ? 'visible' : 'hidden');\n        }\n    }\n});\n\n// Multiplexer with binary selection\nexport const Mux = GenMux.define('Mux', {\n}, {\n    muxInputs: n => Array(1 << n),\n    muxInput: i => i.isFullyDefined ? i.toBigInt().toString() : undefined\n});\nexport const MuxView = GenMuxView;\n\n// Multiplexer with one-hot selection\nexport const Mux1Hot = GenMux.define('Mux1Hot', {\n    attrs: {\n        info: {\n            refX: .5, refY: .5,\n            textAnchor: 'middle', textVerticalAnchor: 'middle',\n            text: '1Hot',\n            transform: 'rotate(90)'\n        }\n    }\n}, {\n    markup: GenMux.prototype.markup.concat([{\n            tagName: 'text',\n            className: 'info',\n            selector: 'info'\n        }\n    ]),\n    muxInputs: n => Array(n + 1),\n    muxInput: s => {\n        const i = s.toArray();\n        return s.isFullyDefined && i.filter(x => x == 1).length <= 1\n            ? String(i.indexOf(1)+1) : undefined\n    }\n});\nexport const Mux1HotView = GenMuxView;\n\nexport const MuxSparse = GenMux.define('MuxSparse', {\n    /* default properties */\n    inputs: undefined,\n    default_input: false\n}, {\n    initialize() {\n        const inputs = this.get('inputs');\n        for (let i = 0; i < inputs.length; i++)\n            if (typeof inputs[i] != 'bigint')\n                inputs[i] = BigInt(inputs[i]);\n        GenMux.prototype.initialize.apply(this, arguments);\n    },\n    muxInputs(n) {\n        if (this.get('default_input'))\n            return ['*'].concat(this.get('inputs'))\n        else\n            return this.get('inputs');\n    },\n    muxInput(i) {\n        const deflt = this.get('default_input');\n        if (!i.isFullyDefined) return undefined;\n        const idx = this.get('inputs').indexOf(i.toBigInt());\n        return idx < 0 ? (deflt ? 0 : undefined) : (deflt ? idx + 1 : idx);\n    },\n    _gateParams: GenMux.prototype._gateParams.concat(['inputs', 'default_input']),\n    _unsupportedPropChanges: GenMux.prototype._unsupportedPropChanges.concat(['inputs', 'default_input'])\n});\nexport const MuxSparseView = GenMuxView;\n\n","\"use strict\";\n\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl } from '3vl';\n\n// D flip-flops\nexport const Dff = Box.define('Dff', {\n    /* default properties */\n    bits: 1,\n    initial: 'x',\n\n    size: { width: 80, height: undefined },\n    ports: {\n        groups: {\n            'in': {\n                position: Box.prototype._getStackedPosition({ side: 'left' })\n            },\n            'out': {\n                position: Box.prototype._getStackedPosition({ side: 'right' })\n            }\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const initial = this.get('initial');\n        const polarity = this.get('polarity') || {};\n        \n        const ports = [];\n       \n        if (!this.get('no_data'))\n            ports.push({ id: 'in', group: 'in', dir: 'in', bits: bits, portlabel: 'D', labelled: true });\n        ports.push({ id: 'out', group: 'out', dir: 'out', bits: bits, portlabel: 'Q', labelled: true });\n        \n        if ('arst' in polarity && !this.get('arst_value'))\n            this.set('arst_value', Array(bits).fill('0').join(''));\n        \n        if ('srst' in polarity && !this.get('srst_value'))\n            this.set('srst_value', Array(bits).fill('0').join(''));\n\n        let num = 1;\n        if ('aload' in polarity) {\n            num += 2;\n            ports.push({ id: 'ain', group: 'in', dir: 'in', bits: bits, portlabel: 'AD', labelled: true });\n            ports.push({ id: 'aload', group: 'in', dir: 'in', bits: 1, polarity: polarity.aload, labelled: true });\n        }\n        if ('clock' in polarity) {\n            num++;\n            ports.push({ id: 'clk', group: 'in', dir: 'in', bits: 1, polarity: polarity.clock, decor: Box.prototype.decorClock, labelled: true });\n        }\n        if ('set' in polarity) {\n            num++;\n            ports.push({ id: 'set', group: 'in', dir: 'in', bits: bits, polarity: polarity.set, portlabel: 'S', labelled: true });\n        }\n        if ('clr' in polarity) {\n            num++;\n            ports.push({ id: 'clr', group: 'in', dir: 'in', bits: bits, polarity: polarity.clr, portlabel: 'R', labelled: true });\n        }\n        if ('srst' in polarity) {\n            num++;\n            ports.push({ id: 'srst', group: 'in', dir: 'in', bits: 1, polarity: polarity.srst, labelled: true });\n        }\n        if ('arst' in polarity) {\n            num++;\n            ports.push({ id: 'arst', group: 'in', dir: 'in', bits: 1, polarity: polarity.arst, labelled: true });\n        }\n        if ('enable' in polarity) {\n            num++;\n            ports.push({ id: 'en', group: 'in', dir: 'in', bits: 1, polarity: polarity.enable, labelled: true });\n        }\n        \n        this.get('size').height = num*16+8;\n        this.get('ports').items = ports;\n        this.last_clk = 0;\n        \n        Box.prototype.initialize.apply(this, arguments);\n    },\n    _resetPortValue(port) {\n        if (port.id == \"out\" && port.dir == \"out\")\n            return Vector3vl.fromBin(this.get('initial'), port.bits);\n        else return Box.prototype._resetPortValue.call(this, port);\n    },\n    operation(data) {\n        const polarity = this.get('polarity');\n        const pol = what => polarity[what] ? 1 : -1\n        let last_clk, srbits, srbitmask;\n        const apply_sr = (v) => ({out: srbits ? v.and(srbitmask).or(srbits) : v});\n        if ('clock' in polarity) {\n            last_clk = this.last_clk;\n            this.last_clk = data.clk.get(0);\n        }\n        if ('arst' in polarity && data.arst.get(0) == pol('arst'))\n            return { out: Vector3vl.fromBin(this.get('arst_value'), this.get('bits')) };\n        if ('aload' in polarity && data.aload.get(0) == pol('aload'))\n            return { out: data.ain };\n        if ('set' in polarity) {\n            srbits = polarity.set ? data.set : data.set.not();\n            srbitmask = polarity.set ? data.set.not() : data.set;\n        }\n        if ('clr' in polarity) {\n            srbits = srbits ? srbits : Vector3vl.zeros(this.get('bits'));\n            const clrbitmask = polarity.clr ? data.clr.not() : data.clr;\n            srbitmask = srbitmask ? clrbitmask.and(srbitmask) : clrbitmask;\n        }\n        if ('enable' in polarity && data.en.get(0) != pol('enable') && this.get('enable_srst'))\n            return apply_sr(this.get('outputSignals').out);\n        if (!('clock' in polarity) || data.clk.get(0) == pol('clock') && last_clk == -pol('clock')) {\n            if ('srst' in polarity && data.srst.get(0) == pol('srst'))\n                return apply_sr(Vector3vl.fromBin(this.get('srst_value'), this.get('bits')));\n            if ('enable' in polarity && data.en.get(0) != pol('enable') && !this.get('enable_srst'))\n                return apply_sr(this.get('outputSignals').out);\n            if (this.get('no_data'))\n                return apply_sr(this.get('outputSignals').out);\n            return apply_sr(data.in);\n        } else return apply_sr(this.get('outputSignals').out);\n    },\n    _gateParams: Box.prototype._gateParams.concat(['polarity', 'bits', 'initial', 'arst_value', 'srst_value', 'enable_srst', 'no_data']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['polarity', 'bits', 'initial', 'arst_value', 'srst_value', 'enable_srst', 'no_data'])\n});\nexport const DffView = BoxView.extend({\n    _autoResizeBox: true\n});\n\n","\"use strict\";\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl, Mem3vl } from '3vl';\n\n// Memory cell\nexport const Memory = Box.define('Memory', {\n    /* default properties */\n    bits: 1,\n    abits: 1,\n    rdports: [],\n    wrports: [],\n    words: undefined,\n    offset: 0,\n    \n    attrs: {\n        portsplit: {\n            stroke: 'black'\n        }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: Box.prototype._getStackedPosition({ side: 'left' })\n            },\n            'out': {\n                position: Box.prototype._getStackedPosition({ side: 'right' })\n            }\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const abits = this.get('abits');\n        const rdports = this.get('rdports');\n        const wrports = this.get('wrports');\n        \n        let num = 0;\n        let idxOffset = 0;\n        const ports = [], portsplits = [];\n        for (const [portname, port] of this._memrdports()) {\n            ports.push(\n                { id: portname + 'addr', group: 'in', dir: 'in', bits: abits, portlabel: 'addr', labelled: true },\n                { id: portname + 'data', group: 'out', dir: 'out', bits: bits, portlabel: 'data', labelled: true, args: { idxOffset: idxOffset } }\n            );\n            num += 1;\n            if ('srst_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'srst', group: 'in', dir: 'in', bits: 1, portlabel: 'srst', polarity: port.srst_polarity, labelled: true });\n            }\n            if ('arst_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'arst', group: 'in', dir: 'in', bits: 1, portlabel: 'arst', polarity: port.arst_polarity, labelled: true });\n            }\n            if ('enable_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'en', group: 'in', dir: 'in', bits: 1, portlabel: 'en', polarity: port.enable_polarity, labelled: true });\n            }\n            if ('clock_polarity' in port) {\n                num++;\n                idxOffset++;\n                ports.push({ id: portname + 'clk', group: 'in', dir: 'in', bits: 1, portlabel: 'clk', polarity: port.clock_polarity, decor: Box.prototype.decorClock, labelled: true });\n            }\n            portsplits.push(num);\n        }\n        for (const [portname, port] of this._memwrports()) {\n            num += 2;\n            ports.push(\n                { id: portname + 'data', group: 'in', dir: 'in', bits: bits, portlabel: 'data', labelled: true },\n                { id: portname + 'addr', group: 'in', dir: 'in', bits: abits, portlabel: 'addr', labelled: true }\n            );\n            if ('enable_polarity' in port) {\n                num++;\n                ports.push({ id: portname + 'en', group: 'in', dir: 'in', bits: port.no_bit_enable ? 1 : bits, portlabel: 'en', polarity: port.enable_polarity, labelled: true });\n            }\n            if ('clock_polarity' in port) {\n                num++;\n                ports.push({ id: portname + 'clk', group: 'in', dir: 'in', bits: 1, portlabel: 'clk', polarity: port.clock_polarity, decor: Box.prototype.decorClock, labelled: true });\n            }\n            portsplits.push(num);\n        }\n        portsplits.pop();\n        this.get('size').height = num*16+8;\n        this.get('ports').items = ports;\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        this.removeProp('memdata'); // performance hack\n        \n        this.on('change:size', (_, size) => {\n            // only adapting to changed width\n            const path = [];\n            for (const num of portsplits) {\n                path.push([\n                    [0, 16*num + 4],\n                    [size.width, 16*num + 4]\n                ].map(p => p.join(' ')).join(' L '));\n            }\n            this.attr('path.portsplit/d', 'M ' + path.join(' M '));\n        });\n    },\n    _resetPortValue(port) {\n        if (port.dir == \"out\") {\n            const res = /^rd([0-9]+)data$/.exec(port.id);\n            const portdata = res ? this.get('rdports')[res[1]] : {};\n            if ('init_value' in portdata)\n                return Vector3vl.fromBin(portdata.init_value, port.bits);\n        }\n        return Box.prototype._resetPortValue.call(this, port);\n    },\n    prepare() {\n        const bits = this.get('bits');\n        var words = this.get('words');\n        const memdata = this.get('memdata');\n        \n        if (!words) {\n            words = 1 << this.get('abits');\n            this.prop('words', words, { init: true });\n        }\n        if (memdata)\n            this.memdata = Mem3vl.fromJSON(bits, memdata);\n        else\n            this.memdata = new Mem3vl(bits, words);\n        console.assert(this.memdata.words == words);\n        \n        this.last_clk = {};\n        for (const [portname, port] of this._memports()) {\n            if ('clock_polarity' in port)\n                this.last_clk[portname + 'clk'] = 0;\n        }\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const out = {};\n        const pol = (port, what) => port[what + '_polarity'] ? 1 : -1;\n        const is_enabled = (portname, port) => {\n            if ('enable_polarity' in port && !data[portname + 'en'].toArray().some(x => x == pol(port, 'enable')))\n                return false;\n            return true;\n        };\n        const port_active = (portname, port) => {\n            const clkname = portname + 'clk';\n            if ('clock_polarity' in port) {\n                return (data[clkname].get(0) == pol(port, 'clock') && this.last_clk[clkname] == -pol(port, 'clock'));\n            }\n            return true;\n        };\n        const valid_addr = n => n >= 0 && n < this.get('words');\n        const do_comb_read = (portname, port) => {\n            const addr = this._calcaddr(data[portname + 'addr']);\n            if (valid_addr(addr))\n                out[portname + 'data'] = this.memdata.get(addr);\n            else\n                out[portname + 'data'] = Vector3vl.xes(bits);\n        };\n        const write_value = (portname, port, oldval, val) => {\n            if (port.no_bit_enable || !('enable_polarity' in port))\n                return val;\n            const mask = port.enable_polarity ? data[portname + 'en'] : data[portname + 'en'].not();\n            return val.and(mask).or(oldval.and(mask.not()));\n        };\n        const do_read = (portname, port) => {\n            do_comb_read(portname, port);\n            for (const [num, wrport] of this.get('wrports').entries()) {\n                const wrportname = 'wr' + num;\n                const mask_ok = (val, num) => typeof val == 'boolean' ? val : val[num];\n                if ('transparent' in port && mask_ok(port.transparent, num) && port_active(wrportname, wrport) && is_enabled(wrportname, wrport) && data[portname + 'addr'] == data[wrportname + 'addr'])\n                    out[portname + 'data'] = write_value(wrportname, wrport, out[portname + 'data'], data[wrportname + 'data']);\n                if ('collision' in port && mask_ok(port.collision, num) && port_active(wrportname, wrport) && is_enabled(wrportname, wrport) && data[portname + 'addr'] == data[wrportname + 'addr'])\n                    out[portname + 'data'] = write_value(wrportname, wrport, out[portname + 'data'], Vector3vl.xes(bits));\n            }\n\n        };\n        const do_write = (portname, port) => {\n            const addr = this._calcaddr(data[portname + 'addr']);\n            if (valid_addr(addr)) {\n                const oldval = this.memdata.get(addr);\n                const newval = write_value(portname, port, oldval, data[portname + 'data']);\n                const changed = !oldval.eq(newval);\n                this.memdata.set(addr, newval);\n                if (changed)\n                    this.trigger(\"memChange\", addr, newval);\n            }\n        };\n        const do_srst = (portname, port) => {\n            if (data[portname + 'srst'].get(0) == pol(port, 'srst'))\n                out[portname + 'data'] = 'srst_value' in port\n                                       ? Vector3vl.fromBin(port.srst_value, bits)\n                                       : Vector3vl.zeros(bits);\n        };\n        const do_arst = (portname, port) => {\n            if (data[portname + 'arst'].get(0) == pol(port, 'arst'))\n                out[portname + 'data'] = 'arst_value' in port\n                                       ? Vector3vl.fromBin(port.arst_value, bits)\n                                       : Vector3vl.zeros(bits);\n        };\n        const update_last_clk = (portname, port) => {\n            if ('clock_polarity' in port) {\n                const clkname = portname + 'clk';\n                this.last_clk[clkname] = data[clkname].get(0);\n            }\n        };\n        for (const [portname, port] of this._memrdports()) {\n            out[portname + 'data'] = this.get('outputSignals')[portname + 'data'];\n            if ('clock_polarity' in port && is_enabled(portname, port) && port_active(portname, port))\n                do_read(portname, port);\n        }\n        for (const [portname, port] of this._memwrports())\n            if (is_enabled(portname, port) && port_active(portname, port))\n                do_write(portname, port);\n        for (const [portname, port] of this._memrdports())\n            if (!('clock_polarity' in port) && is_enabled(portname, port))\n                do_comb_read(portname, port);\n        for (const [portname, port] of this._memrdports()) {\n            if ('srst_polarity' in port && (is_enabled(portname, port) || !('enable_srst' in port)) && port_active(portname, port))\n                do_srst(portname, port);\n            if ('arst_polarity' in port)\n                do_arst(portname, port);\n        }\n        for (const [portname, port] of this._memrdports())\n            update_last_clk(portname, port);\n        for (const [portname, port] of this._memwrports())\n            update_last_clk(portname, port);\n        return out;\n    },\n    _calcaddr(sig) {\n        if (!sig.isFullyDefined) return -1;\n        return sig.toNumber() - this.get('offset');\n    },\n    * _memrdports() {\n        for (const [num, port] of this.get('rdports').entries())\n            yield [\"rd\" + num, port];\n    },\n    * _memwrports() {\n        for (const [num, port] of this.get('wrports').entries())\n            yield [\"wr\" + num, port];\n    },\n    * _memports() {\n        yield* this._memrdports();\n        yield* this._memwrports();\n    },\n    markup: Box.prototype.markup.concat([{\n            tagName: 'path',\n            className: 'portsplit',\n            selector: 'portsplit'\n        }], Box.prototype.markupZoom),\n    getGateParams() {\n        // hack to get memdata back\n        const params = Box.prototype.getGateParams.apply(this, arguments);\n        params.memdata = this.memdata.toJSON();\n        return params;\n    },\n    _gateParams: Box.prototype._gateParams.concat(['bits', 'abits', 'rdports', 'wrports', 'words', 'offset']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['bits', 'abits', 'rdports', 'wrports', 'words', 'offset']),\n    _operationHelpers: Box.prototype._operationHelpers.concat(['_memrdports', '_memwrports', '_memports', '_calcaddr'])\n});\nexport const MemoryView = BoxView.extend({\n    _autoResizeBox: true,\n    events: {\n        \"click foreignObject.tooltip\": \"stopprop\",\n        \"mousedown foreignObject.tooltip\": \"stopprop\",\n        \"touchstart foreignObject.tooltip\": \"stopprop\", // make sure the input receives focus\n        \"click a.zoom\": \"_displayEditor\"\n    },\n    _displayEditor(evt) {\n        evt.stopPropagation();\n        const model = this.model;\n        const display3vl = model.graph._display3vl;\n        const div = $('<div>', {\n            title: \"Memory contents: \" + model.get('label')\n        }).appendTo('html > body');\n        div.append($(\n            '<div class=\"btn-toolbar\" role=\"toolbar\">' +\n            '<div class=\"btn-group mr-2\" role=\"group\">' +\n            '<button name=\"prev\" type=\"button\" class=\"btn btn-secondary\" title=\"Previous page\">←</button>' +\n            '<button name=\"next\" type=\"button\" class=\"btn btn-secondary\" title=\"Next page\">→</button>' +\n            '</div>' + \n//            '<div class=\"btn-group mr-2\" role=\"group\">' +\n//            '<button type=\"button\" class=\"btn btn-secondary\" title=\"Load contents\">Load</button>' +\n//            '<button type=\"button\" class=\"btn btn-secondary\" title=\"Save contents\">Save</button>' +\n//            '</div>' + \n            '<div class=\"input-group\">' +\n            help.baseSelectMarkupHTML(display3vl, model.get('bits'), 'hex') +\n            '</div>' +\n            '</div>' +\n            '<table class=\"memeditor\">' +\n            '</table>'));\n        const words = model.get('words');\n        const memdata = model.memdata;\n        const ahex = Math.ceil(model.get('abits')/4);\n        const rows = 8;\n        let columns, address = 0;\n        const get_numbase = () => div.find('select[name=base]').val();\n        const getCell = (addr) => {\n            const r = Math.floor((addr - address) / columns);\n            const c = addr - address - r * columns;\n            return div.find('table tr:nth-child('+(r+1)+') td:nth-child('+(c+2)+') input');\n        }\n        const clearMarkings = (sigs) => {\n            for (const [portname, port] of model._memrdports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).removeClass('isread');\n            }\n            for (const [portname, port] of model._memwrports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).removeClass('iswrite');\n            }\n        }\n        const displayMarkings = (sigs) => {\n            for (const [portname, port] of model._memrdports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).addClass('isread');\n            }\n            for (const [portname, port] of model._memwrports()) {\n                getCell(model._calcaddr(sigs[portname + 'addr'])).addClass('iswrite');\n            }\n        }\n        const updateStuff = () => {\n            const numbase = get_numbase();\n            div.find('button[name=prev]').prop('disabled', address <= 0);\n            div.find('button[name=next]').prop('disabled', address + rows * columns >= words);\n            let row = div.find('table tr:first-child');\n            const memdata = model.memdata;\n            for (let r = 0; r < rows; r++, row = row.next()) {\n                if (address + r * columns >= words) break;\n                const addrs = (address + r * columns).toString(16);\n                let col = row.find('td:first-child');\n                col.text('0'.repeat(ahex - addrs.length) + addrs)\n                col = col.next();\n                for (let c = 0; c < columns; c++, col = col.next()) {\n                    if (address + r * columns + c >= words) break;\n                    col.find('input').val(display3vl.show(numbase, memdata.get(address + r * columns + c)))\n                                     .removeClass('invalid');\n                }\n            }\n            displayMarkings(model.get('inputSignals'));\n        };\n        const redraw = () => {\n            const numbase = get_numbase();\n            const ptrn = display3vl.pattern(numbase);\n            const ds = display3vl.size(numbase, model.get('bits')); \n            columns = Math.min(words, 16, Math.ceil(32/ds));\n            address = Math.max(0, Math.min(words - rows * columns, address));\n            const table = div.find('table');\n            table.empty();\n            for (let r = 0; r < rows; r++) {\n                if (address + r * columns >= words) break;\n                const row = $('<tr>');\n                $('<td>').appendTo(row);\n                for (let c = 0; c < columns; c++) {\n                    if (address + r * columns + c >= words) break;\n                    const col = $('<td>');\n                    $('<input type=\"text\">')\n                        .attr('size', ds)\n                        .attr('maxlength', ds)\n                        .attr('pattern', ptrn)\n                        .appendTo(col);\n                    col.appendTo(row);\n                }\n                row.appendTo(table);\n            }\n            updateStuff();\n        };\n        redraw();\n        div.find(\"select[name=base]\").on('change', redraw);\n        div.find(\"button[name=prev]\").on('click', () => {\n            clearMarkings(model.get('inputSignals'));\n            address = Math.max(0, address - rows * columns);\n            updateStuff();\n        });\n        div.find(\"button[name=next]\").on('click', () => {\n            clearMarkings(model.get('inputSignals'));\n            address = Math.min(words - rows * columns, address + rows * columns);\n            updateStuff();\n        });\n        div.on(\"change\", \"input\", (evt) => {\n            const numbase = get_numbase();\n            const target = $(evt.target);\n            const c = target.closest('td').index() - 1;\n            const r = target.closest('tr').index();\n            const addr = address + r * columns + c;\n            const bits = model.get('bits');\n            if (display3vl.validate(numbase, evt.target.value, bits)) {\n                const val = display3vl.read(numbase, evt.target.value, bits);\n                memdata.set(addr, val);\n                model.trigger('manualMemChange', model, addr, val);\n                target.removeClass('invalid');\n            } else {\n                target.addClass('invalid');\n            }\n        });\n        const mem_change_cb = (addr, data) => {\n            if (addr < address || addr > address + rows * columns) return;\n            const numbase = get_numbase();\n            const z = getCell(addr)\n                .val(display3vl.show(numbase, memdata.get(addr)))\n                .removeClass('invalid')\n                .removeClass('flash');\n            setTimeout(() => { z.addClass('flash') }, 10);\n        };\n        const input_change_cb = (gate, sigs) => {\n            clearMarkings(model.previous('inputSignals'));\n            displayMarkings(sigs);\n        };\n        model.on(\"memChange\", mem_change_cb);\n        model.on(\"change:inputSignals\", input_change_cb);\n        this.paper.trigger('open:memorycontent', div, () => {\n            div.remove();\n            model.off(\"memChange\", mem_change_cb);\n            model.off(\"change:inputSignals\", input_change_cb);\n        });\n        return false;\n    }\n});\n\n","\"use strict\";\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport * as joint from 'jointjs';\nimport { Box, BoxView } from './base.mjs';\nimport * as help from '../help.mjs';\nimport { Vector3vl, Mem3vl } from '3vl';\nimport dagre from 'dagre';\nimport graphlib from 'graphlib';\n\nexport const FSM = Box.define('FSM', {\n    /* default properties */\n    bits: { in: 1, out: 1},\n    polarity: { clock: true },\n    init_state: 0,\n    states: 1,\n    trans_table: [],\n    \n    size: { width: 80, height: 3*16+8 },\n    ports: {\n        groups: {\n            'in': {\n                position: Box.prototype._getStackedPosition({ side: 'left' })\n            },\n            'out': {\n                position: Box.prototype._getStackedPosition({ side: 'right' })\n            }\n        }\n    }\n}, {\n    initialize() {\n        const bits = this.get('bits');\n        const polarity = this.get('polarity');\n        \n        const init_state = this.get('init_state');\n        const states = this.get('states');\n        const trans_table = this.get('trans_table');\n        \n        this.get('ports').items = [\n            { id: 'in', group: 'in', dir: 'in', bits: bits.in, labelled: true },\n            { id: 'clk', group: 'in', dir: 'in', bits: 1, polarity: polarity.clock, decor: Box.prototype.decorClock, labelled: true },\n            { id: 'arst', group: 'in', dir: 'in', bits: 1, polarity: polarity.arst, labelled: true },\n            { id: 'out', group: 'out', dir: 'out', bits: bits.out, labelled: true }\n        ];\n        \n        Box.prototype.initialize.apply(this, arguments);\n        \n        const current_state = this.get('current_state');\n        \n        this.fsmgraph = new joint.dia.Graph;\n        const statenodes = [];\n        for (let n = 0; n < states; n++) {\n            const node = new joint.shapes.standard.Circle({stateNo: n, id: 'state' + n, isInit: n == init_state});\n            node.attr('label/text', String(n));\n            node.resize(100,50);\n            if (n == init_state)\n                node.attr('body/strokeWidth', 3)\n            if (n == current_state)\n                node.attr('body/class', 'current_state');\n            node.addTo(this.fsmgraph);\n            statenodes.push(node);\n        }\n        for (const [stateIn, trs] of this.transitions) {\n            for (const tr of trs) {\n                const trans = new joint.shapes.standard.Link({\n                    id: tr.id, \n                    ctrlIn: tr.ctrlIn,\n                    ctrlOut: tr.ctrlOut\n                });\n                trans.appendLabel({\n                    attrs: {\n                        text: {\n                            text: trans.get('ctrlIn').toBin() + '/' + trans.get('ctrlOut').toBin()\n                        }\n                    }\n                });\n                trans.source({ id: 'state' + stateIn });\n                trans.target({ id: 'state' + tr.stateOut });\n                trans.addTo(this.fsmgraph);\n            }\n        }\n        \n        this.listenTo(this, 'change:current_state', (model, state) => {\n            const pstate = model.previous('current_state');\n            this.fsmgraph.getCell('state' + pstate).removeAttr('body/class');\n            this.fsmgraph.getCell('state' + state).attr('body/class', 'current_state');\n        });\n        this.listenTo(this, 'change:next_trans', (model, id) => {\n            const pid = model.previous('next_trans');\n            if (pid) {\n                const cell = this.fsmgraph.getCell(pid);\n                cell.removeAttr('line/class');\n                cell.removeAttr('line/targetMarker/class');\n            }\n            if (id) {\n                this.fsmgraph.getCell(id).attr({\n                    line: {\n                        class: 'next_trans',\n                        targetMarker: {\n                            class: 'next_trans'\n                        }\n                    }\n                });\n            }\n        });\n    },\n    prepare() {\n        const bits = this.get('bits');\n        this.transitions = new Map();\n        var id = 0;\n        for (const tr of this.get('trans_table')) {\n            if (!this.transitions.has(tr.state_in))\n                this.transitions.set(tr.state_in, []);\n            this.transitions.get(tr.state_in).push({\n                id: 'tr'+id,\n                stateOut: tr.state_out,\n                ctrlIn: Vector3vl.fromBin(tr.ctrl_in, bits.in),\n                ctrlOut: Vector3vl.fromBin(tr.ctrl_out, bits.out)\n            });\n            id++;\n        };\n        var current_state = this.get('current_state');\n        if (current_state === undefined) {\n            current_state = this.get('init_state');\n            this.set('current_state', current_state);\n        }\n        this.last_clk = 0;\n    },\n    operation(data) {\n        const bits = this.get('bits');\n        const polarity = this.get('polarity');\n        const next_trans = () => {\n            const links = this.transitions.get(this.get('current_state')) || [];\n            for (const trans of links) {\n                const ctrlIn = trans.ctrlIn;\n                const xmask = ctrlIn.xmask();\n                if (data.in.or(xmask).eq(ctrlIn.or(xmask)))\n                    return trans;\n            }\n        };\n        const next_output = () => {\n            const links = this.transitions.get(this.get('current_state')) || [];\n            const ixmask = data.in.xmask();\n            const results = [];\n            for (const trans of links) {\n                const ctrlIn = trans.ctrlIn;\n                const xmask = ctrlIn.xmask().or(ixmask);\n                if (data.in.or(xmask).eq(ctrlIn.or(xmask)))\n                    results.push(trans.ctrlOut);\n            }\n            const xes = Vector3vl.xes(bits.out);\n            if (results.length == 0) return xes;\n            while (results.length > 1) {\n                const other = results.pop();\n                const eqs = results[0].xnor(other).or(xes);\n                results[0] = results[0].and(eqs).or(xes.and(eqs.xmask()));\n            };\n            return results[0];\n        };\n        const pol = what => polarity[what] ? 1 : -1;\n        if (data.arst.get(0) == pol('arst')) {\n            this.set('current_state', this.get('init_state'));\n        } else {\n            const last_clk = this.last_clk;\n            if (data.clk.get(0) == pol('clock') && last_clk == -pol('clock')) {\n                const trans = next_trans();\n                this.set('current_state',\n                    trans ? trans.stateOut : this.get('init_state'));\n            }\n        }\n        this.last_clk = data.clk.get(0);\n        const trans = next_trans();\n        if (!trans) {\n            this.set('next_trans', undefined);\n        } else {\n            this.set('next_trans', trans.id);\n        }\n        return { out: next_output() };\n    },\n    markup: Box.prototype.markup.concat(Box.prototype.markupZoom),\n    _gateParams: Box.prototype._gateParams.concat(['bits', 'polarity', 'states', 'init_state', 'trans_table']),\n    _unsupportedPropChanges: Box.prototype._unsupportedPropChanges.concat(['bits', 'polarity', 'states', 'init_state', 'trans_table']),\n    _presentationParams: Box.prototype._presentationParams.concat(['current_state', 'next_trans'])\n});\n\nexport const FSMView = BoxView.extend({\n    _autoResizeBox: true,\n    events: {\n        \"click foreignObject.tooltip\": \"stopprop\",\n        \"mousedown foreignObject.tooltip\": \"stopprop\",\n        \"touchstart foreignObject.tooltip\": \"stopprop\", // make sure the input receives focus\n        \"click a.zoom\": \"_displayEditor\"\n    },\n    _displayEditor(evt) {\n        evt.stopPropagation();\n        const div = $('<div>', {\n            title: \"FSM: \" + this.model.get('label')\n        }).appendTo('html > body');\n        const pdiv = $('<div>').appendTo(div);\n        const graph = this.model.fsmgraph;\n        const paper = new joint.dia.Paper({\n            el: pdiv,\n            model: graph\n        });\n        // to visualize the cells\n        graph.resetCells(graph.getCells());\n        // lazy layout\n        if (!graph.get('laid_out')) {\n            joint.layout.DirectedGraph.layout(graph, {\n                dagre: dagre,\n                graphlib: graphlib\n            });\n            graph.set('laid_out', true);\n        }\n        // auto-resizing\n        paper.listenTo(graph, 'change:position', (elem) => {\n            paper.fitToContent({ padding: 30, allowNewOrigin: 'any' });\n        });\n        paper.fitToContent({ padding: 30, allowNewOrigin: 'any' });\n        this.paper.trigger('open:fsm', div, () => {\n            paper.remove();\n            div.remove();\n        });\n        return false;\n    }\n});\n\n","import { IO, IOView, NumBase } from './io.mjs';\nimport { BoxView } from './base.mjs';\n\nconst highColor = '#03c03c';\nconst lowColor = '#3c3c3c';\n\n/*\n * This is a standard 7-segment display element.\n * It is designed to take an 8-bit number as an input.\n *\n * The most significant bit determines the decimal point state (dp).\n * The following bits determine states of respectively: a,b,c,d,e,f,g\n * segments of the display. (g is determined by the least significant bit).\n *\n * The placement of single segments of the display can be checked\n * on the wikipedia page here:\n * https://en.wikipedia.org/wiki/Seven-segment_display#/media/File:7_Segment_Display_with_Labeled_Segments.svg\n */\nexport const Display7 = IO.define('Display7',\n{\n  bits: 8,\n  size: { width: 76.5, height: 110 },\n  attrs: {\n    LEDs: {\n      fill: lowColor,\n      transform: 'translate(1,1),scale(6)'\n    },\n    a: {\n      points: '1, 1  2, 0  8, 0  9, 1  8, 2  2, 2'\n    },\n    b: {\n      points: '9, 1 10, 2 10, 8  9, 9  8, 8  8, 2'\n    },\n    c: {\n      points: '9, 9 10,10 10,16  9,17  8,16  8,10'\n    },\n    d: {\n      points: '9,17  8,18  2,18  1,17  2,16  8,16'\n    },\n    e: {\n      points: '1,17  0,16  0,10  1, 9  2,10  2,16'\n    },\n    f: {\n      points: '1, 9  0, 8  0, 2  1, 1  2, 2  2, 8'\n    },\n    g: {\n      points: '1, 9  2, 8  8, 8  9, 9  8,10  2,10'\n    },\n    dp: {\n      cx: '11.3',\n      cy: '16.9',\n      r: '1.1'\n    },\n    body: {\n      height: 'calc(h)',\n      width: 'calc(w)',\n      stroke: '#222222',\n      fill: '#333333',\n    }\n  }\n}, {\n  isOutput: true,\n  _portDirection: 'in',\n  bits: 8,\n\n  getOutput() {\n    return this.get('inputSignals').in;\n  },\n  markupBus: NumBase.prototype.markup.concat([\n    {\n      tagName: 'rect',\n      selector: 'display'\n    },\n    {\n      tagName: 'polygon',\n      selector: 'a',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'b',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'c',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'd',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'e',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'f',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'polygon',\n      selector: 'g',\n      groupSelector: 'LEDs'\n    }, {\n      tagName: 'circle',\n      selector: 'dp',\n      groupSelector: 'LEDs'\n    }]),\n});\n\nexport const Display7View = IOView.extend({\n  _autoResizeBox: false,\n\n  confirmUpdate(flags) {\n    BoxView.prototype.confirmUpdate.apply(this, arguments);\n    this._updateDisplay();\n  },\n  _updateDisplay() {\n    const inputSignal = this.model.getOutput();\n    const newAttrs = {\n      dp: { fill: inputSignal.get(7) === 1 ? highColor : lowColor },\n      a: { fill: inputSignal.get(6) === 1 ? highColor : lowColor },\n      b: { fill: inputSignal.get(5) === 1 ? highColor : lowColor },\n      c: { fill: inputSignal.get(4) === 1 ? highColor : lowColor },\n      d: { fill: inputSignal.get(3) === 1 ? highColor : lowColor },\n      e: { fill: inputSignal.get(2) === 1 ? highColor : lowColor },\n      f: { fill: inputSignal.get(1) === 1 ? highColor : lowColor },\n      g: { fill: inputSignal.get(0) === 1 ? highColor : lowColor },\n    };\n    this._applyAttrs(newAttrs);\n  },\n});\n","\nimport * as cells from '../cells.mjs';\nimport FastPriorityQueue from 'fastpriorityqueue';\nimport { Vector3vl } from '3vl';\n\nconst specialGates = new Set(['Subcircuit', 'Input', 'Output', 'Button', 'Lamp', 'NumEntry', 'NumDisplay']);\n\nclass Link {\n    constructor(source, target) {\n        this.source = source;\n        this.target = target;\n    }\n}\n\nclass Gate {\n    constructor(id, graph, gateParams, ports, inputSignals, outputSignals) {\n        this.id = id;\n        this.graph = graph;\n        this.special = specialGates.has(gateParams.type);\n        this.isSubcircuit = gateParams.type == 'Subcircuit';\n        this.isOutput = gateParams.type == 'Output';\n        const cell = cells[gateParams.type].prototype;\n        this.operation = cell.operation;\n        for (const helper of cell._operationHelpers)\n            this[helper] = cell[helper];\n        this.links = new Set();\n        this._links_to = Object.create(null);\n        this._params = gateParams;\n        this._params.inputSignals = Object.create(null);\n        this._params.outputSignals = Object.create(null);\n        this._presentationParams = cell._presentationParams;\n        this._presentationParamChanged = Object.create(null);\n        this._monitors = Object.create(null);\n        this._ports = Object.create(null);\n        for (const port of ports) {\n            this._ports[port.id] = port;\n            this._monitors[port.id] = new Set();\n            if (port.dir == \"in\")\n                this._params.inputSignals[port.id] = Vector3vl.fromClonable(inputSignals[port.id]);\n            if (port.dir == \"out\") {\n                this._params.outputSignals[port.id] = Vector3vl.fromClonable(outputSignals[port.id]);\n                this._links_to[port.id] = new Set();\n            }\n        }\n        cell.prepare.call(this);\n    }\n    get(name) {\n        return this._params[name];\n    }\n    set(name, value) {\n        this._params[name] = value;\n        if (this._presentationParams.includes(name)) {\n            worker._markPresentationParam(this, name);\n        }\n    }\n    addLinkTo(port, target) {\n        this._links_to[port].add(target);\n    }\n    removeLinkTo(port, target) {\n        this._links_to[port].delete(target);\n    }\n    addLink(linkId) {\n        this.links.add(linkId);\n    }\n    removeLink(linkId) {\n        this.links.delete(linkId);\n    }\n    targets(port) {\n        return this._links_to[port];\n    }\n    getPort(port) {\n        return this._ports[port];\n    }\n    getPorts() {\n        return Object.values(this._ports);\n    }\n    trigger(event, ...args) {\n        postMessage({ type: 'gateTrigger', args: [this.graph.id, this.id, event, args] });\n    }\n    monitor(port, monitorId) {\n        this._monitors[port].add(monitorId);\n    }\n    unmonitor(port, monitorId) {\n        this._monitors[port].delete(Number(monitorId));\n    }\n    getMonitors(port) {\n        return this._monitors[port];\n    }\n}\n\nclass Graph {\n    constructor(id) {\n        this.id = id;\n        this._gates = {};\n        this._links = {};\n        this._observed = false;\n        this._subcircuit = null;\n    }\n    addLink(linkId, source, target) {\n        this._links[linkId] = new Link(source, target);\n        this._gates[source.id].addLinkTo(source.port, target);\n        this._gates[source.id].addLink(linkId);\n        this._gates[target.id].addLink(linkId);\n    }\n    addGate(gateId, gateParams, ports, inputSignals, outputSignals) {\n        this._gates[gateId] = new Gate(gateId, this, gateParams, ports, inputSignals, outputSignals);\n    }\n    removeLink(linkId) {\n        const link = this._links[linkId];\n        this._gates[link.source.id].removeLinkTo(link.source.port, link.target);\n        this._gates[link.source.id].removeLink(linkId);\n        this._gates[link.target.id].removeLink(linkId);\n        delete this._links[linkId];\n    }\n    removeGate(gateId) {\n        for (const linkId of this._gates[gateId].links)\n            this.removeLink(linkId);\n        this._gates[gateId].graph = null;\n        delete this._gates[gateId];\n    }\n    getGate(gateId) {\n        return this._gates[gateId];\n    }\n    getLink(linkId) {\n        return this._links[linkId];\n    }\n    getGates() {\n        return Object.values(this._gates);\n    }\n    observe() {\n        this._observed = true;\n    }\n    unobserve() {\n        this._observed = false;\n    }\n    get observed() {\n        return this._observed;\n    }\n    setSubcircuit(gate) {\n        this._subcircuit = gate;\n    }\n    get subcircuit() {\n        return this._subcircuit;\n    }\n}\n\nclass WorkerEngineWorker {\n    constructor() {\n        this._interval = 10;\n        this._graphs = Object.create(null);\n        this._monitors = Object.create(null);\n        this._monitorChecks = Object.create(null);\n        this._alarms = Object.create(null);\n        this._alarmQueue = new Map();\n        this._queue = new Map();\n        this._pq = new FastPriorityQueue();\n        this._toUpdate = new Map();\n        this._toUpdateParam = new Map();\n        this._tick = 0;\n        this._sender = setInterval(() => {\n            this._sendUpdates();\n        }, 25);\n        this._updater = null;\n    }\n    interval(ms) {\n        this._interval = ms;\n    }\n    updateGates(reqid, sendUpdates) {\n        const count = this._updateGates();\n        if (sendUpdates) this._sendUpdates();\n        this._postMonitors();\n        this._sendAck(reqid, count);\n    }\n    _updateGates() {\n        if (this._pq.peek() == this._tick) return this._updateGatesNext();\n        else {\n            const k = this._tick | 0;\n            this._tick = (k + 1) | 0;\n            return 0;\n        }\n    }\n    updateGatesNext(reqid, sendUpdates) {\n        const count = this._updateGatesNext();\n        if (sendUpdates) this._sendUpdates();\n        this._postMonitors();\n        this._sendAck(reqid, count);\n    }\n    _updateGatesNext() {\n        const k = this._pq.poll() | 0;\n        console.assert(k >= this._tick);\n        this._tick = k;\n        const q = this._queue.get(k);\n        let count = 0;\n        while (q.size) {\n            const [gate, args] = q.entries().next().value;\n            q.delete(gate);\n            if (gate.special) continue;\n            const graph = gate.graph;\n            if (!graph) continue;\n            const newOutputs = gate.operation(args);\n            if ('_clock_hack' in newOutputs) {\n                delete newOutputs['_clock_hack'];\n                this._enqueue(gate);\n            }\n            this._setGateOutputSignals(gate, newOutputs);\n            count++;\n        }\n        this._queue.delete(k);\n        this._tick = (k + 1) | 0;\n        return count;\n    }\n    ping(reqid, sendUpdates) {\n        if (sendUpdates) this._sendUpdates();\n        this._sendAck(reqid);\n    }\n    start() {\n        this._stop();\n        this._updater = setInterval(() => {\n            this._updateGates();\n            this._postMonitors();\n        }, this._interval);\n    }\n    startFast() {\n        this._stop();\n        this._updater = setInterval(() => {\n            const startTime = Date.now();\n            while (Date.now() - startTime < 10 && this._hasPendingEvents() && this._updater) {\n                this._updateGatesNext();\n                this._postMonitors();\n            }\n        }, 10);\n    }\n    stop(reqid, sendUpdates) {\n        this._stop();\n        if (sendUpdates) this._sendUpdates();\n        this._sendAck(reqid);\n    }\n    _stop() {\n        if (this._updater) {\n            clearInterval(this._updater);\n            this._updater = null;\n        }\n    }\n    addGraph(graphId) {\n        console.assert(!(graphId in this._graphs));\n        this._graphs[graphId] = new Graph(graphId);\n    }\n    addLink(graphId, linkId, source, target) {\n        const graph = this._graphs[graphId];\n        graph.addLink(linkId, source, target);\n        const sourceGate = graph.getGate(source.id);\n        const targetGate = graph.getGate(target.id);\n        const sig = sourceGate.get('outputSignals')[source.port];\n        this._setGateInputSignal(targetGate, target.port, sig);\n    }\n    addGate(graphId, gateId, gateParams, ports, inputSignals, outputSignals) {\n        const graph = this._graphs[graphId];\n        graph.addGate(gateId, gateParams, ports, inputSignals, outputSignals);\n        this._enqueue(graph.getGate(gateId));\n    }\n    addSubcircuit(graphId, gateId, subgraphId, IOmap) {\n        const graph = this._graphs[graphId];\n        const gate = graph.getGate(gateId);\n        const subgraph = this._graphs[subgraphId];\n        gate.set('subgraph', subgraph);\n        gate.set('circuitIOmap', IOmap);\n        subgraph.setSubcircuit(gate);\n        for (const [port, ioId] of Object.entries(IOmap)) {\n            const io = subgraph.getGate(ioId);\n            if (gate.getPort(port).dir == 'in') {\n                this._setGateOutputSignal(io, 'out', gate.get('inputSignals')[port]);\n            }\n            if (gate.getPort(port).dir == 'out') {\n                this._setGateOutputSignal(gate, port, io.get('inputSignals').in);\n            }\n        }\n    }\n    removeLink(graphId, linkId) {\n        const graph = this._graphs[graphId];\n        const link = graph.getLink(linkId);\n        graph.removeLink(linkId);\n        const targetGate = graph.getGate(link.target.id);\n        const sig = Vector3vl.xes(targetGate.getPort(link.target.port).bits);\n        this._setGateInputSignal(targetGate, link.target.port, sig);\n    }\n    removeGate(graphId, gateId) {\n        this._graphs[graphId].removeGate(gateId);\n    }\n    observeGraph(graphId) {\n        const graph = this._graphs[graphId];\n        graph.observe();\n        for (const gate of graph.getGates())\n            for (const port of gate.getPorts())\n                if (port.dir == 'out')\n                    this._markUpdate(gate, port.id);\n    }\n    unobserveGraph(graphId) {\n        this._graphs[graphId].unobserve();\n    }\n    changeInput(graphId, gateId, sig) {\n        const gate = this._graphs[graphId].getGate(gateId);\n        this._setGateOutputSignals(gate, { out: Vector3vl.fromClonable(sig) });\n    }\n    changeParam(graphId, gateId, paramName, val) {\n        const gate = this._graphs[graphId].getGate(gateId);\n        gate.set(paramName, val);\n    }\n    manualMemChange(graphId, gateId, addr, data) {\n        const gate = this._graphs[graphId].getGate(gateId);\n        gate.memdata.set(addr, Vector3vl.fromClonable(data));\n        this._enqueue(gate);\n    }\n    monitor(graphId, gateId, port, monitorId, {triggerValues, stopOnTrigger, oneShot, synchronous }) {\n        if (triggerValues != undefined)\n            for (const k of triggerValues.keys())\n                triggerValues[k] = Vector3vl.fromClonable(triggerValues[k]);\n        const gate = this._graphs[graphId].getGate(gateId);\n        this._monitors[monitorId] = { gate, port, triggerValues, stopOnTrigger, oneShot, synchronous };\n        gate.monitor(port, monitorId);\n        if (triggerValues == undefined)\n            postMessage({ type: 'monitorValue', args: [monitorId, this._tick, gate.get('outputSignals')[port]] });\n    }\n    unmonitor(monitorId) {\n        const monitor = this._monitors[monitorId];\n        if (monitor == undefined) return;\n        monitor.gate.unmonitor(monitor.port, monitorId);\n        delete this._monitors[monitorId];\n        delete this._monitorChecks[monitorId];\n    }\n    alarm(tick, alarmId, {stopOnAlarm, synchronous}) {\n        if (tick <= this._tick) return;\n        this._alarms[alarmId] = { tick, stopOnAlarm, synchronous };\n        if (!this._alarmQueue.has(tick))\n            this._alarmQueue.set(tick, new Set());\n        this._alarmQueue.get(tick).add(alarmId);\n        this._pq.add(tick-1);\n        if (!this._queue.has(tick-1))\n            this._queue.set(tick-1, new Map());\n    }\n    unalarm(alarmId) {\n        const alarm = this._alarms[alarmId];\n        if (alarm == undefined) return;\n        const tick = alarm.tick;\n        this._alarmQueue.get(tick).delete(alarmId);\n        if (this._alarmQueue.get(tick).size == 0)\n            this._alarmQueue.delete(tick);\n        delete this._alarms[alarmId];\n    }\n    _enqueue(gate) {\n        const k = (this._tick + gate.get('propagation')) | 0;\n        const sq = (() => {\n            const q = this._queue.get(k);\n            if (q !== undefined) return q;\n            const q1 = new Map();\n            this._queue.set(k, q1);\n            this._pq.add(k);\n            return q1;\n        })();\n        sq.set(gate, Object.assign({}, gate.get('inputSignals')));\n    }\n    _postMonitors() {\n        for (const [monitorId, sig] of Object.entries(this._monitorChecks)) {\n            const {triggerValues, stopOnTrigger, oneShot, synchronous} = this._monitors[monitorId];\n            let triggered = true;\n            if (triggerValues)\n                triggered = triggerValues.some((triggerValue) => sig.eq(triggerValue));\n            if (triggered) {\n                if (oneShot) this.unmonitor(monitorId);\n                if (synchronous) this._sendUpdates();\n                postMessage({ type: 'monitorValue', args: [monitorId, this._tick, sig, stopOnTrigger, oneShot] });\n                if (stopOnTrigger) this._stop();\n            }\n        }\n        this._monitorChecks = Object.create(null);\n        if (this._alarmQueue.get(this._tick)) {\n            for (const alarmId of this._alarmQueue.get(this._tick)) {\n                const { stopOnAlarm, synchronous } = this._alarms[alarmId];\n                if (synchronous) this._sendUpdates();\n                delete this._alarms[alarmId];\n                postMessage({ type: 'alarmReached', args: [alarmId, this._tick, stopOnAlarm] });\n                if (stopOnAlarm) this._stop();\n            }\n            this._alarmQueue.delete(this._tick);\n        }\n    }\n    _setGateOutputSignals(gate, newOutputs) {\n        for (const [port, sig] of Object.entries(newOutputs)) {\n            this._setGateOutputSignal(gate, port, sig);\n        }\n    }\n    _setGateOutputSignal(gate, port, sig) {\n        const outputs = gate.get('outputSignals');\n        const oldOutput = outputs[port];\n        if (sig.eq(oldOutput)) return;\n        outputs[port] = sig;\n        this._markUpdate(gate, port);\n        for (const target of gate.targets(port)) {\n            const targetGate = gate.graph.getGate(target.id);\n            this._setGateInputSignal(targetGate, target.port, sig);\n        }\n        const monitors = gate.getMonitors(port);\n        for (const monitorId of monitors)\n            this._monitorChecks[monitorId] = sig;\n    }\n    _setGateInputSignal(targetGate, port, sig) {\n        const inputs = targetGate.get('inputSignals');\n        const oldInput = inputs[port];\n        if (sig.eq(oldInput)) return;\n        inputs[port] = sig;\n        if (targetGate.isSubcircuit) {\n            const subgraph = targetGate.get('subgraph');\n            if (!subgraph) return;\n            const iomap = targetGate.get('circuitIOmap');\n            const gate = subgraph.getGate(iomap[port]);\n            if (!gate) return;\n            this._setGateOutputSignals(gate, { out: sig });\n        } else if (targetGate.isOutput) {\n            const subcir = targetGate.graph.subcircuit;\n            if (!subcir) return;\n            const subcirPort = targetGate.get('net');\n            this._setGateOutputSignal(subcir, subcirPort, sig);\n        } else {\n            this._enqueue(targetGate);\n        }\n    }\n    _markUpdate(gate, port) {\n        if (!gate.graph.observed) return;\n        const s = (() => {\n            const v = this._toUpdate.get(gate);\n            if (v !== undefined) return v;\n            const r = new Set();\n            this._toUpdate.set(gate, r);\n            return r;\n        })();\n        s.add(port);\n    }\n    _markPresentationParam(gate, param) {\n        if (!gate.graph.observed) return;\n        const s = (() => {\n            const v = this._toUpdateParam.get(gate);\n            if (v !== undefined) return v;\n            const r = new Set();\n            this._toUpdateParam.set(gate, r);\n            return r;\n        })();\n        s.add(param);\n    }\n    _sendUpdates() {\n        const updates = [];\n        for (const [gate, ports] of this._toUpdate) {\n            const outputSignals = gate.get('outputSignals');\n            const outputs = {};\n            for (const port of ports)\n                outputs[port] = outputSignals[port];\n            updates.push([gate.graph.id, gate.id, outputs]);\n        }\n        this._toUpdate = new Map();\n        const pendingEvents = this._hasPendingEvents();\n        postMessage({ type: 'update', args: [this._tick, pendingEvents, updates] });\n        if (this._toUpdateParam.size > 0) {\n            for (const [gate, params] of this._toUpdateParam) {\n                for (const param of params)\n                    postMessage({ type: 'gateSet', args: [gate.graph.id, gate.id, param, gate.get(param) ] });\n            }\n            this._toUpdateParam = new Map();\n        }\n    }\n    _sendAck(reqid, response) {\n        postMessage({ type: 'ack', args: [reqid, response] });\n    }\n    _hasPendingEvents() {\n        return this._queue.size > 0;\n    }\n};\n\nconst worker = new WorkerEngineWorker();\n\nself.onmessage = (e) => {\n    const msg = e.data;\n    if ('arg' in msg)\n        worker[msg.type](msg.arg);\n    else if ('args' in msg)\n        worker[msg.type].apply(worker, msg.args);\n    else\n        worker[msg.type]();\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [935], () => (__webpack_require__(5821)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","installedChunks","circleArrowhead","tagName","attributes","CircleSourceArrowhead","extend","CircleTargetArrowhead","DoublyButton","update","this","relatedView","isShortWire","options","distance","distanceShort","secondary","hide","distanceLong","prototype","apply","arguments","RemoveButton","name","children","MonitorButton","selector","action","evt","notify","portGroupAttrs","wire","stroke","x1","y1","x2","undefined","y2","port","magnet","r","fill","strokeWidth","strokeOpacity","bits","ref","fontSize","iolabel","textVerticalAnchor","decor","Gate","define","propagation","label","size","width","height","inputSignals","outputSignals","attrs","body","refX","refDy","textAnchor","ports","groups","position","refDx","refY","z","operation","initialize","get","items","_preprocessPorts","prepare","bindAttrToProp","_unsupportedPropChanges","length","on","map","prop","join","__","___","opt","init","changed","Object","keys","forEach","attr","set","previous","console","warn","_","val","_changeOutputSignals","sigs","graph","getConnectedLinks","outbound","groupBy","wires","value","_setInput","sig","signals","_clearInput","getPort","Vector3vl","xes","_resetPortsSignals","text","_getBitsText","labelled","portlabel","id","polarity","assert","group","d","_setPortsBits","portsBits","portsReset","portid","find","push","filter","_changeSource","inbound","_changeTarget","_resetPortValue","in","out","dir","_removePortsSignals","addPort","addPorts","removePort","removePorts","_getStackedPosition","portsArgs","elBBox","side","step","offset","x","topLeft","topRight","y","bottomRight","portArgs","index","idxOffset","getLayoutSize","setLayoutPosition","portMarkup","className","markup","getGateParams","layout","_gateParams","concat","_gateLayoutParams","_operationHelpers","_presentationParams","GateView","signal","high","low","def","undef","presentationAttributes","addPresentationAttributes","stopprop","stopPropagation","confirmUpdate","flags","hasFlag","_updatePortSignals","model","isDefined","isHigh","isLow","_applyPortAttrs","_applyAttrs","node","selectors","setNodeAttributes","_portElementsCache","portSelectors","_updatePorts","Wire","line","class","targetMarker","wrapper","warning","has","onAdd","_was_added","remove","tar","target","getCell","_propagateSignal","getTargetElement","_changeSignal","src","source","getSourceElement","_checkConnection","hasChanged","preTar","preTarget","silent","getWireParams","connector","from","to","vertices","getWirePath","hier","sc","reverse","WireView","initFlag","longWireLength","bus","single","none","_wireToolsView","window","tools","focusOpacity","prevModels","_updateSignal","_updateBits","_updateWarning","getConnectionLength","onRemove","_removeTooltip","mouseenter","addTools","_addTooltip","clientX","clientY","mouseleave","removeTools","pos","wire_hover","css","appendTo","document","_generateTextForTooltip","listenTo","stopListening","display3vl","_display3vl","hovertext","show","html","onEndModelChange","endType","endModel","Box","refWidth","refHeight","tooltip","tooltipMinWidth","trigger","markupZoom","namespaceURI","textContent","style","cursor","decorClock","l","BoxView","_autoResizeBox","render","_calculateBoxWidth","leftlabels","Array","el","querySelectorAll","rightlabels","leftwidth","Math","max","getBBox","rightwidth","fixup","NumBase","numbase","usableDisplays","numbaseType","includes","markupTooltip","NumBaseView","events","_changeNumbase","testtext","createElementNS","$el","_makeNumBaseSelector","_updateNumBaseSelector","$","empty","base","IO","net","mode","ioname","fontWeight","_portDirection","b","_checkMode","withinSubcircuit","markupInSubcircuit","markupSingle","markupBus","subcir","portsBitsSubcir","IOView","getAttribute","call","Input","btnface","xAlignment","yAlignment","isInput","zeros","setInput","toggleInput","not","Error","type","InputView","button","_updateView","_updateButton","_updateNumEntry","removeClass","_onButton","_onNumEntry","validate","read","addClass","ButtonView","NumEntry","NumEntryView","Output","led","refR","isOutput","getOutput","OutputView","lamp","_updateLamp","_updateNumDisplay","Lamp","LampView","NumDisplay","NumDisplayView","Constant","constant","fromBin","ConstantView","constantCache","_showText","Clock","zero","_clock_hack","min","ClockView","args","updatePropagation","_changePropagation","valid","String","Number","toggleClass","Display3vlWithRegex","and_path","or_path","buf_path","xor_arc_path_markup","neg_markup","gateMarkup","GateSVG","dx","Gate11","GateX1","inputs","gate","xor_arc","neg_bubble","i","scaling","param","data","ret","in1","binoperation","finoperation","GateReduce","Repeater","RepeaterView","Not","NotView","Or","in2","or","OrView","And","and","AndView","Nor","NorView","Nand","NandView","Xor","xor","XorView","Xnor","XnorView","OrReduce","reduceOr","OrReduceView","NorReduce","reduceNor","NorReduceView","AndReduce","reduceAnd","AndReduceView","NandReduce","reduceNand","NandReduceView","XorReduce","reduceXor","XorReduceView","XnorReduce","reduceXnor","XnorReduceView","isSafeInteger","v","MAX_SAFE_INTEGER","Arith","refCx","refCy","oper","Arith11","signed","isFullyDefined","fromNumber","arithop","toBigInt","Arith21","sgn","shiftHelp","am","bits_in","bits_out","sgn_in","sgn_out","fillx","signbit","ext","make","my_in","slice","Shift","toNumber","shiftdir","BaseCompare","Compare","fromBool","arithcomp","EqCompare","msb","bincomp","Negation","NegationView","UnaryPlus","UnaryPlusView","Addition","j","AdditionView","Subtraction","SubtractionView","Multiplication","MultiplicationView","Division","DivisionView","Modulo","ModuloView","Power","PowerView","ShiftLeft","ShiftLeftView","ShiftRight","ShiftRightView","Lt","LtView","Le","LeView","Gt","GtView","Ge","GeView","Eq","xnor","EqView","Ne","NeView","OpConst","leftOp","BigInt","genLabel","diameter","operSymbol","params","ArithConst","ShiftConst","BaseCompareConst","CompareConst","EqCompareConst","AdditionConst","AdditionConstView","SubtractionConst","SubtractionConstView","MultiplicationConst","MultiplicationConstView","DivisionConst","DivisionConstView","ModuloConst","ModuloConstView","PowerConst","PowerConstView","ShiftLeftConst","ShiftLeftConstView","ShiftRightConst","ShiftRightConstView","LtConst","LtConstView","LeConst","LeConstView","GtConst","GtConstView","GeConst","GeConstView","EqConst","EqConstView","NeConst","NeConstView","BitExtend","input","output","ex","_extBit","BitExtendView","querySelector","ZeroExtend","ZeroExtendView","SignExtend","SignExtendView","BusSlice","first","count","total","s","BusSliceView","BusRegroup","num","gbits","entries","lbl","group_dir","contra","BusRegroupView","BusGroup","outdata","BusGroupView","BusUngroup","BusUngroupView","Subcircuit","IOs","getCells","cell","outputs","sortfun","localeCompare","sort","iomap","io","_warnings","getPortsPositions","positions","res","SubcircuitView","zoomInCircuit","paper","GenMux","sel","ins","muxInputs","path","drawBorder","muxInput","GenMuxView","_updateMux","Mux","n","toString","MuxView","Mux1Hot","info","transform","toArray","indexOf","Mux1HotView","MuxSparse","default_input","deflt","idx","MuxSparseView","Dff","initial","aload","clock","clr","srst","arst","enable","last_clk","pol","what","srbits","srbitmask","apply_sr","clk","ain","clrbitmask","en","DffView","Memory","abits","rdports","wrports","words","portsplit","portsplits","portname","_memrdports","srst_polarity","arst_polarity","enable_polarity","clock_polarity","_memwrports","no_bit_enable","pop","removeProp","p","exec","portdata","init_value","memdata","Mem3vl","fromJSON","_memports","is_enabled","some","port_active","clkname","valid_addr","do_comb_read","addr","_calcaddr","write_value","oldval","mask","do_read","wrport","wrportname","mask_ok","transparent","collision","do_write","newval","eq","do_srst","srst_value","do_arst","arst_value","update_last_clk","toJSON","MemoryView","_displayEditor","div","title","append","ahex","ceil","columns","address","get_numbase","floor","c","clearMarkings","displayMarkings","updateStuff","row","next","addrs","col","repeat","redraw","ptrn","pattern","ds","table","closest","mem_change_cb","setTimeout","input_change_cb","off","FSM","init_state","states","trans_table","current_state","fsmgraph","statenodes","stateNo","isInit","resize","addTo","stateIn","trs","transitions","tr","trans","ctrlIn","ctrlOut","appendLabel","toBin","stateOut","state","pstate","removeAttr","pid","Map","state_in","state_out","ctrl_in","ctrl_out","next_trans","links","xmask","ixmask","results","other","eqs","next_output","FSMView","pdiv","resetCells","dagre","graphlib","elem","fitToContent","padding","allowNewOrigin","highColor","lowColor","Display7","LEDs","a","points","e","f","g","dp","cx","cy","groupSelector","Display7View","_updateDisplay","inputSignal","newAttrs","specialGates","Set","Link","constructor","gateParams","special","isSubcircuit","helper","_links_to","create","_params","_presentationParamChanged","_monitors","_ports","fromClonable","worker","_markPresentationParam","addLinkTo","add","removeLinkTo","delete","addLink","linkId","removeLink","targets","getPorts","values","event","postMessage","monitor","monitorId","unmonitor","getMonitors","_gates","_links","_observed","_subcircuit","addGate","gateId","link","removeGate","getGate","getLink","getGates","observe","unobserve","observed","setSubcircuit","subcircuit","_interval","_graphs","_monitorChecks","_alarms","_alarmQueue","_queue","_pq","FastPriorityQueue","_toUpdate","_toUpdateParam","_tick","_sender","setInterval","_sendUpdates","_updater","interval","ms","updateGates","reqid","sendUpdates","_updateGates","_postMonitors","_sendAck","peek","_updateGatesNext","k","updateGatesNext","poll","q","newOutputs","_enqueue","_setGateOutputSignals","ping","start","_stop","startFast","startTime","Date","now","_hasPendingEvents","stop","clearInterval","addGraph","graphId","sourceGate","targetGate","_setGateInputSignal","addSubcircuit","subgraphId","IOmap","subgraph","ioId","_setGateOutputSignal","observeGraph","_markUpdate","unobserveGraph","changeInput","changeParam","paramName","manualMemChange","triggerValues","stopOnTrigger","oneShot","synchronous","alarm","tick","alarmId","stopOnAlarm","unalarm","q1","assign","triggered","triggerValue","oldOutput","monitors","oldInput","subcirPort","updates","pendingEvents","response","self","onmessage","msg","arg","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","key","splice","definition","o","defineProperty","enumerable","globalThis","Function","obj","hasOwnProperty","Symbol","toStringTag","nmd","paths","chunkId","__webpack_exports__"],"sourceRoot":""}