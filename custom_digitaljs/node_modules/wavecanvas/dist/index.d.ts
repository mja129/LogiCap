import { Vector3vl, Display3vl } from '3vl';
export { Vector3vl };
export declare class Waveform {
    private readonly _bits;
    private readonly _data;
    private _present;
    constructor(_bits: number, _data?: [number, Vector3vl][]);
    get bits(): number;
    updatePresent(t: number): void;
    push(t: number, v: Vector3vl): void;
    getRange(i: number, n: number): [number, Vector3vl][];
}
declare type base = 'hex' | 'oct' | 'bin';
export interface WaveCanvasSettings {
    start: number;
    pixelsPerTick: number;
    present?: number;
    bitColors: [string, string, string, string];
    heightFill: number;
    gapScale: number;
    base: base;
    gridWidth: number;
    gridColor: string;
    gridStep: number;
    gridMinDist: number;
    font: string;
    textColor: string;
}
export declare const defaultSettings: WaveCanvasSettings;
export declare function extendSettings(settings: WaveCanvasSettings, newSettings: any): WaveCanvasSettings;
export declare function calcGridStep(s: WaveCanvasSettings): number;
export declare function drawWaveform(w: Waveform, c: CanvasRenderingContext2D, s: WaveCanvasSettings, disp?: Display3vl): void;
